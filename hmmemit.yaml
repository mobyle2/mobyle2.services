!mobyle/program
name: hmmemit
title: HMMEMIT
description: Generate sequences from a profile HMM
inputs: !mobyle/inputparagraph
    children:
    - !mobyle/inputprogramparameter
        prompt: HMM emit command
        format: '"hmmemit"'
        argpos: 0
        name: hmmcmd
        command: true
        hidden: true
        type: !mobyle/stringtype {}
    - !mobyle/inputprogramparameter {prompt: HMM file, format: '" " + str(hmmfile)',
        simple: true, argpos: 2, mandatory: true, name: hmmfile, command: false}
    - !mobyle/inputprogramparameter
        comment: Save the synthetic sequences to file rather than writing them to
            stdout.
        prompt: Name of the synthetic sequences file (-o)
        format: ( "" , " -o " + str(value) )[ value is not None ]
        argpos: 1
        name: outfile_name
        command: false
        type: !mobyle/stringtype {}
    - !mobyle/inputprogramparameter
        comment: "Emit a consensus sequence, instead of sampling a sequence from the\
            \ profile\n        HMM's probability distribution. The consensus sequence\
            \ is formed by selecting\n        the maximum probability residue at each\
            \ match state."
        prompt: Consensus sequence (-c)
        format: ( "" , " -c" )[ value ]
        argpos: 1
        name: consensus
        precond:
            '#and':
            - {number: '1'}
            - {'#not': sample}
        command: false
        type: !mobyle/booleantype {default: false}
    - !mobyle/inputprogramparameter
        comment: Sample x sequences, rather than just one.
        prompt: Number of sequences to sample (-N)
        format: ( "" , " -N " + str(value) )[ value is not None and value != vdef]
        argpos: 1
        name: number
        command: false
        type: !mobyle/integertype {default: 1}
    - !mobyle/inputprogramparameter
        comment: "Sample sequences from the implicit profile, not from the core model.\
            \ \n        The core\n        model consists only of the homologous states\
            \ (between the begin and end states\n        of a HMMER Plan7 model).\
            \ The profile includes the nonhomologous N, C, and J\n        states,\
            \ local/glocal and uni/multihit algorithm configuration, and the target\
            \ length\n        model. Therefore sequences sampled from a profile may\
            \ include nonhomologous\n        as well as homologous sequences, and\
            \ may contain more than one homologous\n        sequence segment. By default,\
            \ the profile is in multihit local mode, and the target\n        sequence\
            \ length is configured for L=400. To change these defaults, see Options\n\
            \        Controlling Emission from Profiles, below."
        prompt: Sample from profile, not core model (-p)
        format: ( "" , " -p " )[ value ]
        argpos: 1
        name: sample
        command: false
        type: !mobyle/booleantype {default: false}
    - !mobyle/inputprogramparagraph
        prompt: Options controlling emission from profiles (with -p)
        name: controlP
        precond: sample
        children:
        - !mobyle/inputprogramparameter
            comment: "Configure the profile's target sequence length model to generate\
                \ a mean length of\n          approximately the value rather than\
                \ the default of 400."
            prompt: Set expected length from profile (-L)
            format: ( "" , " -L " + str(value) )[ value is not None and value != vdef]
            argpos: 1
            name: len
            command: false
            type: !mobyle/integertype {default: 400}
        - !mobyle/inputprogramparameter
            prompt: Configure profile mode
            format: ( "" , " --" + str(value) )[ value is not None ]
            name: local
            command: false
            type: !mobyle/stringtype
                default: 'null'
                options:
                - {label: null, value: 'null'}
                - {label: local mode, value: local}
                - {label: unilocal mode, value: unilocal}
                - {label: glocal mode, value: glocal}
                - {label: uniglocal mode, value: uniglocal}
    - !mobyle/inputprogramparameter
        comment: "Seed the random number generator with the value, an integer >= 0.\
            \ If the value is nonzero,\n          any stochastic simulations will\
            \ be reproducible; the same command will give the\n          same results.\
            \ If the value is 0, the random number generator is seeded arbitrarily,\
            \ and\n          stochastic simulations will vary from run to run of the\
            \ same command. The default\n          is 0: use an arbitrary seed, so\
            \ different hmmemit runs will generate different\n          samples."
        prompt: Seed number (--seed)
        format: ( "" , " --seed " + str(value) )[ value is not None and value !=vdef
            ]
        argpos: 1
        name: seed
        command: false
        type: !mobyle/integertype {default: 0}
outputs: !mobyle/outputparagraph
    children:
    - !mobyle/outputprogramparameter
        prompt: Output file
        filenames: str(outfile_name)
        name: output_file
        precond:
            outfile_name: {'#ne': None}
        type: !mobyle/formattedtype
            format_terms: ['EDAM_format:2200']
            data_terms: ['EDAM_data:2044']
    - !mobyle/outputprogramparameter
        prompt: Output file
        filenames: '"hmmemit.out"'
        name: out_file
        precond:
            outfile_name: {'#eq': None}
        output_type: stdout
        type: !mobyle/formattedtype
            format_terms: ['EDAM_format:2200']
            data_terms: ['EDAM_data:2044']
    - !mobyle/outputprogramparameter
        prompt: Standard error
        filenames: '"hmmemit.err"'
        name: stderr
        type: !mobyle/formattedtype
            data_terms: ['EDAM_data:2048']
comment: hmmemit reads an HMM file from hmmfile and generates a number of sequences
    from it; or, if the -c option is selected, generate a single majority-rule consensus.
    This can be useful for various applications in which one needs a simulation of
    sequences consistent with a sequence family consensus.By default, hmmemit generates
    10 sequences and outputs them in FASTA (unaligned) format.
operations: ['EDAM_operation:0230']
topics: ['EDAM_topics:0188']
env: {}
