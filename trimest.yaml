_type: Program
name: trimest
title: trimest
description: Remove poly-A tails from nucleotide sequences
inputs:
    _type: InputParagraph
    children:
    -   _type: InputParagraph
        prompt: Input section
        name: e_input
        children:
        -   _type: InputProgramParameter
            prompt: sequence option
            name: e_sequence
            simple: true
            argpos: '1'
            format: {python: '("", " -sequence=" + str(value))[value is not None]'}
            mandatory: true
            type:
                _type: FormattedType
                format_terms: ['EDAM_format:1927', 'EDAM_format:2200', 'EDAM_format:1935',
                    'EDAM_format:1936', 'EDAM_format:1948', 'EDAM_format:1948', 'EDAM_format:1957',
                    'EDAM_format:2188', 'EDAM_format:2305']
                data_terms: EDAM_data:2977
    -   _type: InputParagraph
        prompt: Additional section
        name: e_additional
        children:
        -   _type: InputProgramParameter
            comment: This is the minimum length that a poly-A (or poly-T) tail must
                have before it is removed. If there are mismatches in the  tail than
                there must be at least this length of poly-A tail before  the mismatch
                for the mismatch to be considered part of the tail.
            prompt: Minimum length of a poly-a tail (value greater than or equal to
                1)
            name: e_minlength
            ctrl:
            -   message: Value greater than or equal to 1 is required
                test:
                    value: {'#gte': '1'}
            argpos: '2'
            format: {python: '("", " -minlength=" + str(value))[value is not None
                    and value!=vdef]'}
            type: {_type: IntegerType, default: 4}
        -   _type: InputProgramParameter
            comment: "If there are this number or fewer contiguous non-A bases in\
                \ a poly-A tail then, if there are '-minlength' 'A' bases before \
                \ them, they will be considered part of the tail and removed . \n\
                \  For example the terminal 4 A's of GCAGAAAA would be removed with\
                \  the default values of -minlength=4 and -mismatches=1 (There are\
                \  not at least 4 A's before the last 'G' and so only the A's after\
                \  it are considered to be part of the tail). The terminal 9 bases\
                \ of  GCAAAAGAAAA would be removed; There are at least -minlength\
                \ A's  preceeding the last 'G', so it is part of the tail."
            prompt: Number of contiguous mismatches allowed in a tail (value greater
                than or equal to 0)
            name: e_mismatches
            ctrl:
            -   message: Value greater than or equal to 0 is required
                test:
                    value: {'#gte': '0'}
            argpos: '3'
            format: {python: '("", " -mismatches=" + str(value))[value is not None
                    and value!=vdef]'}
            type: {_type: IntegerType, default: 1}
        -   _type: InputProgramParameter
            comment: When a poly-T region at the 5' end of the sequence is found and
                removed, it is likely that the sequence is in the reverse  sense.
                This option will change the sequence to the forward sense  when it
                is written out. If this option is not set, then the sense  will not
                be changed.
            prompt: Write the reverse complement when poly-t is removed
            name: e_reverse
            argpos: '4'
            format: {python: '(" -noreverse", "")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            comment: The poly-A region can be 'masked' by converting the sequence
                characters to lower-case. Some non-EMBOSS programs e.g.  fasta can
                interpret this as a masked region. The sequence is  unchanged apart
                from the case change. You might like to ensure  that the whole sequence
                is in upper-case before masking the  specified regions to lower-case
                by using the '-supper' sequence  qualifier.
            prompt: Change poly-a tail to lower-case
            name: e_tolower
            argpos: '5'
            format: {python: '("", " -tolower")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
    -   _type: InputParagraph
        prompt: Advanced section
        name: e_advanced
        children:
        -   _type: InputProgramParameter
            comment: If this is set true, then the 5' end of the sequence is inspected
                for poly-T tails. These will be removed if they are  longer than any
                3' poly-A tails. If this is false, then the 5' end  is ignored.
            prompt: Remove poly-t tails at the 5' end of the sequence.
            name: e_fiveprime
            argpos: '6'
            format: {python: '(" -nofiveprime", "")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
    -   _type: InputParagraph
        prompt: Output section
        name: e_output
        children:
        -   _type: InputProgramParameter
            prompt: Name of the output sequence file (e_outseq)
            name: e_outseq
            argpos: '7'
            format: {python: '("" , " -outseq=" + str(value))[value is not None]'}
            type: {_type: StringType, default: trimest.e_outseq}
        -   _type: InputProgramParameter
            prompt: Choose the sequence output format
            name: e_osformat_outseq
            argpos: '8'
            format: {python: '("", " -osformat=" + str(value))[value is not None and
                    value!=vdef]'}
            type:
                _type: StringType
                default: FASTA
                options:
                - {label: Embl, value: EMBL}
                - {label: Fasta, value: FASTA}
                - {label: Gcg, value: GCG}
                - {label: Genbank, value: GENBANK}
                - {label: Nbrf, value: NBRF}
                - {label: Pir, value: PIR}
                - {label: Raw, value: RAW}
                - {label: Swissprot, value: SWISSPROT}
                - {label: Gff, value: GFF}
    -   _type: InputProgramParameter
        prompt: Turn off any prompting
        name: auto
        argpos: '9'
        format: {python: '" -auto -stdout"'}
        hidden: true
        type: {_type: StringType}
outputs:
    _type: OutputParagraph
    children:
    -   _type: OutputParagraph
        prompt: Output section
        name: e_output
        children:
        -   _type: OutputProgramParameter
            prompt: outseq_out option
            name: e_outseq_out
            filenames: {python: e_outseq}
            type: {_type: FormattedType, data_terms: 'EDAM_data:2044'}
operations: ['EDAM_operation:0428', 'EDAM_operation:0369', 'EDAM_operation:0363']
topics: ['EDAM_topic:0105']
documentation_links: ['http://bioweb2.pasteur.fr/docs/EMBOSS/trimest.html', 'http://emboss.sourceforge.net/docs/themes']
public_name: trimest
command: {path: null, value: trimest}
