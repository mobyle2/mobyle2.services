_type: Program
name: iep
title: iep
description: Calculate the isoelectric point of proteins
inputs:
    _type: InputParagraph
    children:
    -   _type: InputParagraph
        prompt: Input section
        name: e_input
        children:
        -   _type: InputProgramParameter
            prompt: sequence option
            name: e_sequence
            simple: true
            argpos: '1'
            format: {python: '("", " -sequence=" + str(value))[value is not None]'}
            mandatory: true
            type:
                _type: FormattedType
                format_terms: ['EDAM_format:1927', 'EDAM_format:2200', 'EDAM_format:1935',
                    'EDAM_format:1936', 'EDAM_format:1948', 'EDAM_format:1948', 'EDAM_format:1957',
                    'EDAM_format:2188', 'EDAM_format:2305']
                data_terms: EDAM_data:2976
    -   _type: InputParagraph
        prompt: Additional section
        name: e_additional
        children:
        -   _type: InputProgramParameter
            prompt: Number of n-termini (value greater than or equal to 0)
            name: e_amino
            ctrl:
            -   message: Value greater than or equal to 0 is required
                test:
                    value: {'#gte': '0'}
            argpos: '2'
            format: {python: '("", " -amino=" + str(value))[value is not None and
                    value!=vdef]'}
            type: {_type: IntegerType, default: 1}
        -   _type: InputProgramParameter
            prompt: Number of c-termini (value greater than or equal to 0)
            name: e_carboxyl
            ctrl:
            -   message: Value greater than or equal to 0 is required
                test:
                    value: {'#gte': '0'}
            argpos: '3'
            format: {python: '("", " -carboxyl=" + str(value))[value is not None and
                    value!=vdef]'}
            type: {_type: IntegerType, default: 1}
        -   _type: InputProgramParameter
            prompt: Include charge at n and c terminus
            name: e_termini
            argpos: '4'
            format: {python: '(" -notermini", "")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Number of modified lysines (value greater than or equal to 0)
            name: e_lysinemodified
            ctrl:
            -   message: Value greater than or equal to 0 is required
                test:
                    value: {'#gte': '0'}
            argpos: '5'
            format: {python: '("", " -lysinemodified=" + str(value))[value is not
                    None and value!=vdef]'}
            type: {_type: IntegerType, default: 0}
        -   _type: InputProgramParameter
            prompt: Number of disulphide bridges (value greater than or equal to 0)
            name: e_disulphides
            ctrl:
            -   message: Value greater than or equal to 0 is required
                test:
                    value: {'#gte': '0'}
            argpos: '6'
            format: {python: '("", " -disulphides=" + str(value))[value is not None
                    and value!=vdef]'}
            type: {_type: IntegerType, default: 0}
    -   _type: InputParagraph
        prompt: Advanced section
        name: e_advanced
        children:
        -   _type: InputProgramParameter
            prompt: Step value for ph (value from .01 to 1.)
            name: e_step
            ctrl:
            -   message: Value greater than or equal to .01 is required
                test:
                    value: {'#gte': '0.01'}
            -   message: Value less than or equal to 1. is required
                test:
                    value: {'#lte': '1.0'}
            argpos: '7'
            format: {python: '("", " -step=" + str(value))[value is not None and value!=vdef]'}
            type: {_type: FloatType, default: 0.5}
    -   _type: InputParagraph
        prompt: Output section
        name: e_output
        children:
        -   _type: InputProgramParameter
            prompt: Plot charge vs ph
            name: e_plot
            argpos: '8'
            format: {python: '("", " -plot")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Write results to a file
            name: e_report
            argpos: '9'
            format: {python: '(" -noreport", "")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Choose the e_graph output format
            name: e_graph
            argpos: '10'
            format: {python: '(" -graph=" + str(vdef), " -graph=" + str(value))[value
                    is not None and value!=vdef]'}
            precond: e_plot
            type:
                _type: StringType
                default: png
                options:
                - {label: Png, value: png}
                - {label: Gif, value: gif}
                - {label: Cps, value: cps}
                - {label: Ps, value: ps}
                - {label: Meta, value: meta}
                - {label: Data, value: data}
        -   _type: InputProgramParameter
            prompt: Name of the output graph
            name: xy_goutfile
            argpos: '11'
            format: {python: '("" , " -goutfile=" + str(value))[value is not None]'}
            precond: e_plot
            type: {_type: StringType, default: iep_xygraph}
        -   _type: InputProgramParameter
            prompt: Name of the output file (e_outfile)
            name: e_outfile
            argpos: '12'
            format: {python: '("" , " -outfile=" + str(value))[value is not None]'}
            precond: e_report
            type: {_type: StringType, default: iep.e_outfile}
    -   _type: InputProgramParameter
        prompt: Turn off any prompting
        name: auto
        argpos: '13'
        format: {python: '" -auto -stdout"'}
        hidden: true
        type: {_type: StringType}
outputs:
    _type: OutputParagraph
    children:
    -   _type: OutputParagraph
        prompt: Output section
        name: e_output
        children:
        -   _type: OutputProgramParameter
            prompt: Graph file
            name: xy_outgraph_png
            filenames: {python: '"*.png"'}
            precond:
                '#and':
                - e_plot
                - {e_graph: png}
        -   _type: OutputProgramParameter
            prompt: Graph file
            name: xy_outgraph_gif
            filenames: {python: '"*.gif"'}
            precond:
                '#and':
                - e_plot
                - {e_graph: gif}
        -   _type: OutputProgramParameter
            prompt: Graph file
            name: xy_outgraph_ps
            filenames: {python: '"*.ps"'}
            precond:
                '#or':
                -   '#and':
                    - e_plot
                    - {e_graph: ps}
                - {e_graph: cps}
        -   _type: OutputProgramParameter
            prompt: Graph file
            name: xy_outgraph_meta
            filenames: {python: '"*.meta"'}
            precond:
                '#and':
                - e_plot
                - {e_graph: meta}
        -   _type: OutputProgramParameter
            prompt: Graph file
            name: xy_outgraph_data
            filenames: {python: '"*.dat"'}
            precond:
                '#and':
                - e_plot
                - {e_graph: data}
        -   _type: OutputProgramParameter
            prompt: outfile_out option
            name: e_outfile_out
            filenames: {python: e_outfile}
operations: ['EDAM_operation:0403']
topics: ['EDAM_topic:0123', 'EDAM_topic:0137']
documentation_links: ['http://bioweb2.pasteur.fr/docs/EMBOSS/iep.html', 'http://emboss.sourceforge.net/docs/themes']
public_name: iep
command: {path: null, value: iep}
