!mobyle/program
name: mfold
version: '3.2'
title: MFOLD
description: Prediction of RNA secondary structure
authors: M. Zuker
inputs: !mobyle/inputparagraph
    children:
    - !mobyle/inputprogramparameter
        format: '"mfold"'
        argpos: 0
        name: mfold
        command: true
        hidden: true
        type: !mobyle/stringtype {}
    - !mobyle/inputprogramparameter
        comment: "SEQ : The sequence file may contain multiple sequences.\n\t    \
            \  At present, the mfold script will fold the first sequence by default."
        prompt: Sequence File (SEQ)
        format: '" SEQ=" + str(value)'
        simple: true
        argpos: 1
        mandatory: true
        name: SEQ
        command: false
        type: !mobyle/formattedtype
            format_terms: ['EDAM_format:1942', 'EDAM_format:1936', 'EDAM_format:1927']
            data_terms: ['EDAM_data:2977']
    - !mobyle/inputprogramparameter
        prompt: RNA or DNA (NA)
        format: ("" , " NA=" + str(value))[ value is not None and value != vdef]
        simple: true
        argpos: 2
        name: NA
        command: false
        type: !mobyle/stringtype
            default: RNA
            options:
            - {label: RNA, value: RNA}
            - {label: DNA, value: DNA}
    - !mobyle/inputprogramparameter
        comment: It indicates whether a linear or circular nucleic acid is being folded.
        prompt: Sequence type  (LC)
        format: ("" , " LC=" + str(value))[ value is not None and value != vdef]
        simple: true
        argpos: 2
        name: LC
        command: false
        type: !mobyle/stringtype
            default: linear
            options:
            - {label: Linear, value: linear}
            - {label: Circular, value: circular}
    - !mobyle/inputprogramparagraph
        prompt: Control options
        name: control
        argpos: 3
        children:
        - !mobyle/inputprogramparameter
            prompt: Temperature (T)
            format: ("" , " T=" + str(value))[ value is not None and value != vdef]
            simple: true
            argpos: 3
            name: T
            command: false
            type: !mobyle/integertype {default: 37}
        - !mobyle/inputprogramparameter
            comment: This is the percent suboptimality for computing the energy dot
                plot and suboptimal foldings. The default value is 5%. This parameter
                controls the value of the free energy increment, delta (deltaG). Delta
                of deltaG is set to P% of deltaG, computed minimum free energy. The
                energy dot plot shows only those base pairs that are in foldings with
                free energy minus or equal to deltaG plus delta (deltaG). Similarly,
                the free energies of computed foldings are in the range from deltaG
                to deltaG plus delta (deltaG). No matter the value of P, mfold currently
                keeps delta (deltaG) in the range [1,12] (kcal/mole).
            prompt: Percent (P)
            format: ("", " P="+str(value))[value is not None and value != vdef]
            argpos: 3
            name: P
            command: false
            type: !mobyle/integertype {default: 5}
        - !mobyle/inputprogramparameter
            prompt: Na+ molar concentration (NA_CONC)
            format: ("" , " NA_CONC=" + str(value))[ value is not None and value !=
                vdef]
            simple: true
            argpos: 3
            name: NA_CONC
            command: false
            type: !mobyle/floattype {default: 1.0}
        - !mobyle/inputprogramparameter
            prompt: Mg++ molar concentration (MG_CONC)
            format: ("" , " MG_CONC=" + str(value))[ value is not None and value !=
                vdef]
            simple: true
            argpos: 3
            name: MG_CONC
            command: false
            type: !mobyle/floattype {default: 0.0}
        - !mobyle/inputprogramparameter
            comment: This is the window parameter that controls the number of foldings
                that are automatically computed by mfold . `W' may be thought of as
                a distance parameter. The distance between 2 base pairs, i.j and i'.j'
                may be defined as max{|i-i'|,|j-j'|}. Then if k-1 foldings have already
                been predicted by mfold , the kth folding will have at least W base
                pairs that are at least a distance W from any of the base pairs in
                the first k-1 foldings. As W increases, the number of predicted foldings
                decreases. If W is not specified, mfold selects a value by default
                based on sequence length.
            prompt: Window parameter  (W)
            format: ("" , " W=" + str(value))[ value is not None ]
            argpos: 3
            name: W
            command: false
            type: !mobyle/integertype {}
        - !mobyle/inputprogramparameter
            comment: A base pair i.j will not be allowed to form (in linear RNA) if
                j-i > MAXBP. For circular RNA, a base pair i.j cannot form if min{j-i,n+i-j}
                > MAXBP . Thus small values of MAXBP ensure that only short range
                base pairs will be predicted. By default, MAXBP=+infinity, indicating
                no constraint.
            prompt: Max base pair distance (MAXBP)
            format: ("" , " MAXBP=" + str(value))[ value is not None ]
            argpos: 3
            name: MAXBP
            command: false
            type: !mobyle/integertype {}
        - !mobyle/inputprogramparameter
            prompt: Maximum bulge/interior loop size (MAX_LP)
            format: ("" , " MAX_LP=" + str(value))[ value is not None and value !=
                vdef]
            argpos: 3
            name: MAX_LP
            command: false
            type: !mobyle/integertype {default: 30}
        - !mobyle/inputprogramparameter
            prompt: Maximum asymmetry of a bulge/interior loop (MAX_AS)
            format: ("" , " MAX_AS=" + str(value))[ value is not None and value !=
                vdef]
            argpos: 3
            name: MAX_AS
            command: false
            type: !mobyle/integertype {default: 30}
        - !mobyle/inputprogramparameter
            comment: 'MAX : This is the maximum number of foldings that mfold will
                compute (50 by default). It is better to limit the number of foldings
                by careful selection of the P and W parameters.'
            prompt: Maximum number of foldings to be computed (MAX)
            format: ("" , " MAX=" + str(value))[ value is not None and value != vdef]
            argpos: 3
            name: MAX
            command: false
            type: !mobyle/integertype {default: 50}
        - !mobyle/inputprogramparameter
            comment: 'This parameter currently takes on 3 values.- `none'' : secondary
                structures are drawn without any special annotation. Letters or outline
                are in black, while base pairs are red lines or dots for GC pairs
                and blue lines or dots for AU and GU pairs.- `p-num'' : Colored dots,
                colored base characters or a combination are used to display in each
                folding how well-determined each base is according to the P-num values
                in the `fold_name.ann'' file.- `ss-count'' : Colored dots, colored
                base characters or a combination are used to display in each folding
                how likely a base is to be single-stranded according to sample statistics
                stored in the `fold_name.ss-count'' file.'
            prompt: Structure annotation type (ANN)
            format: ("" , " ANN=" + str(value))[ value is not None and value != vdef]
            argpos: 2
            name: ANN
            command: false
            type: !mobyle/stringtype
                default: none
                options:
                - {label: No special annotation, value: none}
                - {label: p-num, value: p-num}
                - {label: ss-count, value: ss-count}
        - !mobyle/inputprogramparameter
            prompt: Structure display mode (MODE)
            format: ("" , " MODE=" + str(value))[ value is not None and value != vdef]
            argpos: 2
            name: MODE
            command: false
            type: !mobyle/stringtype
                default: auto
                options:
                - {label: Auto, value: auto}
                - {label: Bases, value: bases}
                - {label: Lines, value: lines}
        - !mobyle/inputprogramparameter
            prompt: Structure rotation angle (ROT_ANG)
            format: ("" , " ROT_ANG=" + str(value))[ value is not None and value !=
                vdef]
            argpos: 3
            name: ROT_ANG
            command: false
            type: !mobyle/integertype {default: 0}
        - !mobyle/inputprogramparameter
            prompt: 5' base number (START)
            format: ("" , " START=" + str(value))[ value is not None and value !=
                vdef]
            argpos: 3
            name: START
            command: false
            type: !mobyle/integertype {default: 1}
        - !mobyle/inputprogramparameter
            prompt: 3' base number  (STOP)
            format: ("" , " STOP=" + str(value))[ value is not None ]
            argpos: 3
            name: STOP
            command: false
            type: !mobyle/integertype {}
        - !mobyle/inputprogramparameter {comment: "AUX : (optional) This is the name\
                \ of an auxiliary input file of folding\n\t\t  constraints. If this\
                \ parameter is not used, mfold looks for a file\n\t\t  named `fold_name.aux'.\
                \ If this file exists and is not empty, then it\n\t\t  is interpreted\
                \ as a constraint file. Thus constraints may be used\n\t\t  without\
                \ the use of this command line parameter.Fill the box or the file\
                \ with constraints (1 constraint per line) You may:1. force bases\
                \ i,i+1,...,i+k-1 to be double stranded by entering:F   i   0   k2.\
                \ force consecutive base pairs i.j,i+1.j-1, ...,i+k-1.j-k+1 by entering:F\
                \   i   j   k3. force bases i,i+1,...,i+k-1 to be single stranded\
                \ by entering:P   i   0   k4. prohibit the consecutive base pairsi.j,i+1.j-1,\
                \ ...,i+k-1.j-k+1 by entering:P   i   j   k5. prohibit bases i to\
                \ j from pairing with bases k to l by entering:P   i-j   k-l", prompt: Constraints
                File (AUX), format: '( "" , " AUX=" + str(value) )[ value is not None]',
            argpos: 3, name: AUX, command: false}
    - !mobyle/inputprogramparagraph
        prompt: Output options
        name: runtype
        argpos: 3
        children:
        - !mobyle/inputprogramparameter
            prompt: Text output file
            format: '""'
            argpos: 4
            name: txt_format
            command: false
            type: !mobyle/booleantype {default: false}
        - !mobyle/inputprogramparameter
            prompt: Detailed output file
            format: '""'
            argpos: 4
            name: det_format
            command: false
            type: !mobyle/booleantype {default: false}
        - !mobyle/inputprogramparameter
            prompt: Html output file
            format: ("" , " RUN_TYPE=html")[ value ]
            argpos: 4
            name: html_format
            command: false
            type: !mobyle/booleantype {default: false}
        - !mobyle/inputprogramparameter
            comment: 'The RNAML (RNA Markup Language) was developed by a consortium
                of investigators and is a proposed syntax for RNA information files.
                A description was published in 2002:A. Waugh, P. Gendron, R. Altman,
                J.W. Brown, D. Case, D. Gautheret, S.C. Harvey, N. Leontis, J. Westbrook,
                E. Westhof, M. Zuker, and

                F. Major RNAML: A standard syntax for exchanging RNA information.
                RNA   8 (6), 707-717, (2002)'
            prompt: RNAML output file
            name: rnaml_format
            command: false
            type: !mobyle/booleantype {default: false}
        - !mobyle/inputprogramparagraph
            prompt: Energy Dot plot
            name: energy_param
            argpos: 3
            children:
            - !mobyle/inputprogramparameter
                comment: 'This is a text file that contains all the

                    base pairs on the energy dot plot , organized into helices for
                    which Delta G(i,j) is constant. The first record is a header,
                    and each subsequent record

                    describes a single helix. The records are usually sorted by Delta
                    G(i,j) and are often filtered so that short helices or isolated
                    base pairs (helices of length 1) in suboptimal foldings are removed.'
                prompt: Energy dot plot output file
                name: plot_format
                command: false
                type: !mobyle/booleantype {default: false}
            - !mobyle/inputprogramparameter
                prompt: Structure annotation output file
                name: ann_format
                command: false
                type: !mobyle/booleantype {default: false}
            - !mobyle/inputprogramparameter
                comment: This file is the same as plot file, except that the energy
                    column is replaced by an h-num column. These files are usually
                    sorted by h-num; lowest to highest, or best determined to worst
                    determined. Often, only helices in optimal foldings are retained.
                prompt: Helix num output file
                name: hnum_format
                command: false
                type: !mobyle/booleantype {default: false}
        - !mobyle/inputprogramparagraph
            prompt: Structure file format
            name: structure_format
            argpos: 3
            children:
            - !mobyle/inputprogramparameter
                comment: A graphics file that ends with the suffix .gif should be
                    displayed directly on the page of your web browser.
                prompt: GIF output file
                name: gif_format
                command: false
                type: !mobyle/booleantype {default: false}
            - !mobyle/inputprogramparameter
                prompt: PDF output file
                name: pdf_format
                command: false
                type: !mobyle/booleantype {default: false}
            - !mobyle/inputprogramparameter
                comment: PostScript is a programming language that is used to describe
                    output for printing and display. It was developed by Adobe Systems.
                    It is common to have PostScript capability on most printers. Programs
                    such as Ghostscript, Ghostview and GSview can be used to display
                    PostScript files(http://www.cs.wisc.edu/~ghost/").
                prompt: Postscript output file
                name: ps_format
                command: false
                type: !mobyle/booleantype {default: false}
            - !mobyle/inputprogramparameter
                comment: 'The ''.ct file'' contains the nucleic acid sequence and
                    base pairing information from which a structure plot may be computed.
                    The mfold software and mfold web servers use the "sir_graph_ng"
                    program to create Postscript, jpg and png images from .ct files.
                    "sir_graph_ng" is part of the mfold_util package that may be obtained
                    here: http://www.bioinfo.rpi.edu/~zukerm/export/.'
                prompt: CT output file
                name: ct_format
                command: false
                type: !mobyle/booleantype {default: false}
            - !mobyle/inputprogramparameter
                comment: "This is an input file for the XRNA program by Bryn Weiser\
                    \ and Harry Noller. \n                The new Java version is\
                    \ available from UC Santa Cruz RNA Center web site: \n       \
                    \         href=\"http://rna.ucsc.edu/rnacenter/xrna/xrna.html\"\
                    . The\n                ss file can be regarded as an expanded\
                    \ ct file. It contains base and connect information as \n    \
                    \            well a coordinates for plotting the bases."
                prompt: XRNA_ss output file
                name: ss_format
                command: false
                type: !mobyle/booleantype {default: false}
outputs: !mobyle/outputparagraph
    children:
    - !mobyle/outputprogramparagraph
        prompt: Output options
        name: runtype
        argpos: 3
        children:
        - !mobyle/outputprogramparameter {filenames: '"*.out"', name: txt_out, precond: txt_format,
            output_type: stdout}
        - !mobyle/outputprogramparameter
            prompt: Detailed outfile
            filenames: '"*.det.html"'
            name: det_out_html
            precond:
                '#and': [det_format, html_format]
            type: !mobyle/formattedtype
                data_terms: ['EDAM_data:2048']
        - !mobyle/outputprogramparameter
            prompt: Detailed outfile
            filenames: '"*.det"'
            name: det_out
            precond:
                '#and':
                - det_format
                - {'#not': html_format}
        - !mobyle/outputprogramparameter
            prompt: Html output file
            filenames: '"*.html"'
            name: out_html
            precond: html_format
            type: !mobyle/formattedtype
                data_terms: ['EDAM_data:2048']
        - !mobyle/outputprogramparameter {prompt: RNAML output file, filenames: '"*.rnaml"',
            name: out_rnaml, precond: rnaml_format}
        - !mobyle/outputprogramparagraph
            prompt: Energy Dot plot
            name: energy_param
            argpos: 3
            children:
            - !mobyle/outputprogramparameter {prompt: Energy dot plot output file,
                filenames: '"*.plot"', name: out_plot, precond: plot_format}
            - !mobyle/outputprogramparameter {prompt: Structure annotation output
                    file, filenames: '"*.ann"', name: ann_plot, precond: ann_format}
            - !mobyle/outputprogramparameter {prompt: Helix num output file, filenames: '"*.h-num"',
                name: hnum_plot, precond: hnum_format}
        - !mobyle/outputprogramparagraph
            prompt: Structure file format
            name: structure_format
            argpos: 3
            children:
            - !mobyle/outputprogramparameter {prompt: GIF output file, filenames: '"*.gif"',
                name: out_gif, precond: gif_format}
            - !mobyle/outputprogramparameter {prompt: PDF output file, filenames: '"*.pdf"',
                name: out_pdf, precond: pdf_format}
            - !mobyle/outputprogramparameter {prompt: Postscript output file, filenames: '"*.ps"',
                name: out_ps, precond: ps_format}
            - !mobyle/outputprogramparameter {prompt: CT output file, filenames: '"*.ct"',
                name: out_ct, precond: ct_format}
            - !mobyle/outputprogramparameter {prompt: XRNA_ss output file, filenames: '"*.ss-count"',
                name: out_ss, precond: ss_format}
    - !mobyle/outputprogramparameter
        prompt: Standard error
        filenames: '"mfold.err"'
        name: stderr
        type: !mobyle/formattedtype
            data_terms: ['EDAM_data:2048']
operations: ['EDAM_operation:0278']
topics: ['EDAM_topics:0697']
references:
- {doi: null, label: 'M. Zuker, D.H. Mathews and D.H. Turner Algorithms and Thermodynamics
        for RNA Secondary Structure Prediction: A Practical Guide in RNA Biochemistry
        and Biotechnology, J. Barciszewski and B.F.C. Clark, eds., NATO ASI Series,
        Kluwer Academic Publishers, (1999)', url: null}
documentation_links: ['http://bioweb2.pasteur.fr/docs/mfold/index.html']
homepage_links: ['http://www.bioinfo.rpi.edu/applications/mfold/']
env: {}
source_links: ['http://www.bioinfo.rpi.edu/~zukerm/export/']
