_type: Program
name: diffseq
title: diffseq
description: Compare and report features of two similar sequences
inputs:
    _type: InputParagraph
    children:
    -   _type: InputParagraph
        prompt: Input section
        name: e_input
        children:
        -   _type: InputProgramParameter
            prompt: asequence option
            name: e_asequence
            simple: true
            argpos: '1'
            format: {python: '("", " -asequence=" + str(value))[value is not None]'}
            mandatory: true
            type:
                _type: FormattedType
                format_terms: ['EDAM_format:1927', 'EDAM_format:2200', 'EDAM_format:1935',
                    'EDAM_format:1936', 'EDAM_format:1948', 'EDAM_format:1948', 'EDAM_format:1957',
                    'EDAM_format:2188', 'EDAM_format:2305']
                data_terms: EDAM_data:2044
        -   _type: InputProgramParameter
            prompt: bsequence option
            name: e_bsequence
            simple: true
            argpos: '2'
            format: {python: '("", " -bsequence=" + str(value))[value is not None]'}
            mandatory: true
            type:
                _type: FormattedType
                format_terms: ['EDAM_format:1927', 'EDAM_format:2200', 'EDAM_format:1935',
                    'EDAM_format:1936', 'EDAM_format:1948', 'EDAM_format:1948', 'EDAM_format:1957',
                    'EDAM_format:2188', 'EDAM_format:2305']
                data_terms: EDAM_data:2044
    -   _type: InputParagraph
        prompt: Required section
        name: e_required
        children:
        -   _type: InputProgramParameter
            comment: The similar regions between the two sequences are found by creating
                a hash table of 'wordsize'd subsequences. 10 is a  reasonable default.
                Making this value larger (20?) may speed up  the program slightly,
                but will mean that any two differences  within 'wordsize' of each
                other will be grouped as a single region  of difference. This value
                may be made smaller (4?) to improve the  resolution of nearby differences,
                but the program will go much  slower.
            prompt: Word size (value greater than or equal to 2)
            name: e_wordsize
            ctrl:
            -   message: Value greater than or equal to 2 is required
                test:
                    value: {'#gte': '2'}
            simple: true
            argpos: '3'
            format: {python: '("", " -wordsize=" + str(value))[value is not None and
                    value!=vdef]'}
            mandatory: true
            type: {_type: IntegerType, default: 10}
    -   _type: InputParagraph
        prompt: Additional section
        name: e_additional
        children:
        -   _type: InputProgramParameter
            comment: Normally this program will find regions of identity that are
                the length of the specified word-size or greater and will then  report
                the regions of difference between these matching regions.  This works
                well and is what most people want if they are working  with long overlapping
                nucleic acid sequences. You are usually not  interested in the non-overlapping
                ends of these sequences. If you  have protein sequences or short RNA
                sequences however, you will be  interested in differences at the very
                ends . It this option is  set to be true then the differences at the
                ends will also be  reported.
            prompt: Force reporting of differences at the start and end
            name: e_globaldifferences
            argpos: '4'
            format: {python: '("", " -globaldifferences")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
    -   _type: InputParagraph
        prompt: Output section
        name: e_output
        children:
        -   _type: InputProgramParameter
            prompt: Name of the report file
            name: e_outfile
            argpos: '5'
            format: {python: '("" , " -outfile=" + str(value))[value is not None]'}
            type: {_type: StringType, default: diffseq.report}
        -   _type: InputProgramParameter
            prompt: Choose the report output format
            name: e_rformat_outfile
            argpos: '6'
            format: {python: '("", " -rformat=" + str(value))[value is not None and
                    value!=vdef]'}
            type:
                _type: StringType
                default: DIFFSEQ
                options:
                - {label: Dasgff, value: DASGFF}
                - {label: Dbmotif, value: DBMOTIF}
                - {label: Diffseq, value: DIFFSEQ}
                - {label: Embl, value: EMBL}
                - {label: Excel, value: EXCEL}
                - {label: Feattable, value: FEATTABLE}
                - {label: Genbank, value: GENBANK}
                - {label: Gff, value: GFF}
                - {label: Listfile, value: LISTFILE}
                - {label: Motif, value: MOTIF}
                - {label: Nametable, value: NAMETABLE}
                - {label: Pir, value: PIR}
                - {label: Regions, value: REGIONS}
                - {label: Seqtable, value: SEQTABLE}
                - {label: Simple, value: SIMPLE}
                - {label: Srs, value: SRS}
                - {label: Swiss, value: SWISS}
                - {label: Table, value: TABLE}
                - {label: Tagseq, value: TAGSEQ}
        -   _type: InputProgramParameter
            comment: File for output of first sequence's features
            prompt: Name of the output feature file (e_aoutfeat)
            name: e_aoutfeat
            argpos: '7'
            format: {python: '("" , " -aoutfeat=" + str(value))[value is not None]'}
            type: {_type: StringType, default: diffseq.e_aoutfeat}
        -   _type: InputProgramParameter
            prompt: Choose the feature output format
            name: e_offormat_aoutfeat
            argpos: '8'
            format: {python: '("", " -offormat=" + str(value))[value is not None and
                    value!=vdef]'}
            type:
                _type: StringType
                default: GFF
                options:
                - {label: Gff, value: GFF}
                - {label: Embl, value: EMBL}
                - {label: Swissprot, value: SWISSPROT}
                - {label: Nbrf, value: NBRF}
                - {label: Pir, value: PIR}
        -   _type: InputProgramParameter
            comment: File for output of second sequence's features
            prompt: Name of the output feature file (e_boutfeat)
            name: e_boutfeat
            argpos: '9'
            format: {python: '("" , " -boutfeat=" + str(value))[value is not None]'}
            type: {_type: StringType, default: diffseq.e_boutfeat}
        -   _type: InputProgramParameter
            prompt: Choose the feature output format
            name: e_offormat_boutfeat
            argpos: '10'
            format: {python: '("", " -offormat=" + str(value))[value is not None and
                    value!=vdef]'}
            type:
                _type: StringType
                default: GFF
                options:
                - {label: Gff, value: GFF}
                - {label: Embl, value: EMBL}
                - {label: Swissprot, value: SWISSPROT}
                - {label: Nbrf, value: NBRF}
                - {label: Pir, value: PIR}
    -   _type: InputProgramParameter
        prompt: Turn off any prompting
        name: auto
        argpos: '11'
        format: {python: '" -auto -stdout"'}
        hidden: true
        type: {_type: StringType}
outputs:
    _type: OutputParagraph
    children:
    -   _type: OutputParagraph
        prompt: Output section
        name: e_output
        children:
        -   _type: OutputProgramParameter
            prompt: outfile_out option
            name: e_outfile_out
            filenames: {python: e_outfile}
            precond:
                e_rformat_outfile:
                    '#in': [DASGFF, DBMOTIF, DIFFSEQ, EMBL, EXCEL, FEATTABLE, GENBANK,
                        GFF, LISTFILE, MOTIF, NAMETABLE, PIR, REGIONS, SEQTABLE, SIMPLE,
                        SRS, SWISS, TABLE, TAGSEQ]
        -   _type: OutputProgramParameter
            prompt: aoutfeat_out option
            name: e_aoutfeat_out
            filenames: {python: e_aoutfeat}
        -   _type: OutputProgramParameter
            prompt: boutfeat_out option
            name: e_boutfeat_out
            filenames: {python: e_boutfeat}
operations: ['EDAM_operation:0256']
topics: ['EDAM_topic:0160']
documentation_links: ['http://bioweb2.pasteur.fr/docs/EMBOSS/diffseq.html', 'http://emboss.sourceforge.net/docs/themes']
public_name: diffseq
command: {path: null, value: diffseq}
