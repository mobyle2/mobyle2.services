_type: Program
name: extractseq
title: extractseq
description: Extract regions from a sequence
inputs:
    _type: InputParagraph
    children:
    -   _type: InputParagraph
        prompt: Input section
        name: e_input
        children:
        -   _type: InputProgramParameter
            prompt: sequence option
            name: e_sequence
            simple: true
            argpos: '1'
            format: {python: '("", " -sequence=" + str(value))[value is not None]'}
            mandatory: true
            type:
                _type: FormattedType
                format_terms: ['EDAM_format:1927', 'EDAM_format:2200', 'EDAM_format:1935',
                    'EDAM_format:1936', 'EDAM_format:1948', 'EDAM_format:1948', 'EDAM_format:1957',
                    'EDAM_format:2188', 'EDAM_format:2305']
                data_terms: EDAM_data:2044
    -   _type: InputParagraph
        prompt: Required section
        name: e_required
        children:
        -   _type: InputProgramParameter
            comment: "Regions to extract. \n A set of regions is specified by a set\
                \ of pairs of positions. \n  The positions are integers. \n  They\
                \ are separated by any non-digit, non-alpha character. \n  Examples\
                \ of region specifications are: \n  24-45, 56-78 \n  1:45, 67=99;765..888\
                \ \n  1,5,8,10,23,45,57,99"
            prompt: 'Regions to extract (eg: 4-57,78-94)'
            name: e_regions
            simple: true
            argpos: '2'
            format: {python: '("", " -regions=" + str(value))[value is not None]'}
            mandatory: true
            type: {_type: StringType}
    -   _type: InputParagraph
        prompt: Additional section
        name: e_additional
        children:
        -   _type: InputProgramParameter
            comment: 'If this is set true then each specified region is written out
                as a separate sequence. The name of the sequence is created  from
                the name of the original sequence with the start and end  positions
                of the range appended with underscore characters between  them, eg:
                XYZ region 2 to 34 is written as: XYZ_2_34'
            prompt: Write regions to separate sequences
            name: e_separate
            argpos: '3'
            format: {python: '("", " -separate")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
    -   _type: InputParagraph
        prompt: Output section
        name: e_output
        children:
        -   _type: InputProgramParameter
            prompt: Name of the output sequence file (e_outseq)
            name: e_outseq
            argpos: '4'
            format: {python: '("" , " -outseq=" + str(value))[value is not None]'}
            type: {_type: StringType, default: extractseq.e_outseq}
        -   _type: InputProgramParameter
            prompt: Choose the sequence output format
            name: e_osformat_outseq
            argpos: '5'
            format: {python: '("", " -osformat=" + str(value))[value is not None and
                    value!=vdef]'}
            type:
                _type: StringType
                default: FASTA
                options:
                - {label: Embl, value: EMBL}
                - {label: Fasta, value: FASTA}
                - {label: Gcg, value: GCG}
                - {label: Genbank, value: GENBANK}
                - {label: Nbrf, value: NBRF}
                - {label: Pir, value: PIR}
                - {label: Raw, value: RAW}
                - {label: Swissprot, value: SWISSPROT}
                - {label: Gff, value: GFF}
    -   _type: InputProgramParameter
        prompt: Turn off any prompting
        name: auto
        argpos: '6'
        format: {python: '" -auto -stdout"'}
        hidden: true
        type: {_type: StringType}
outputs:
    _type: OutputParagraph
    children:
    -   _type: OutputParagraph
        prompt: Output section
        name: e_output
        children:
        -   _type: OutputProgramParameter
            prompt: outseq_out option
            name: e_outseq_out
            filenames: {python: e_outseq}
            type: {_type: FormattedType, data_terms: 'EDAM_data:2044'}
operations: ['EDAM_operation:0369']
topics: ['EDAM_topic:0156']
documentation_links: ['http://bioweb2.pasteur.fr/docs/EMBOSS/extractseq.html', 'http://emboss.sourceforge.net/docs/themes']
public_name: extractseq
command: {path: null, value: extractseq}
