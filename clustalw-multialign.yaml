!mobyle/program
name: clustalw-multialign
title: 'Clustalw: Multiple alignment'
description: Do full multiple alignment
inputs: !mobyle/inputparagraph
    children:
    - !mobyle/inputprogramparagraph
        prompt: Data Input
        name: input
        children:
        - !mobyle/inputprogramparameter
            prompt: Sequences File ( a file containing several sequences ) (-infile)
            format: '" -infile=" + str( value )'
            simple: true
            argpos: 1
            mandatory: true
            name: sequences_input
            precond:
                '#or':
                - {'#not': alignment_input}
                -   '#and': [sequences_input, alignment_input]
            command: false
            type: !mobyle/formattedtype
                format_terms: ['EDAM_format:2200', 'EDAM_format:1948', 'EDAM_format:1927',
                    'EDAM_format:1935', 'EDAM_format:3312', 'EDAM_format:2188']
                data_terms: ['EDAM_data:2044']
        - !mobyle/inputprogramparameter
            comment: "When the sequences are aligned (all sequences\n            \
                \  have the same length and at least one sequence has at least one\n\
                \              gap)"
            prompt: Aligned sequences
            format: '" -infile=" + str( value )'
            simple: true
            mandatory: true
            name: alignment_input
            precond:
                '#or':
                - {'#not': sequences_input}
                -   '#and': [sequences_input, alignment_input]
            command: false
            type: !mobyle/formattedtype
                format_terms: ['EDAM_format:1982', 'EDAM_format:2200']
                data_terms: ['EDAM_data:0863']
    - !mobyle/inputprogramparagraph
        prompt: General settings
        name: general
        argpos: 2
        children:
        - !mobyle/inputprogramparameter
            comment: 'slow: by dynamic programming (slow but accurate)fast: method
                of Wilbur and Lipman (extremely fast but approximate)'
            prompt: Toggle Slow/Fast pairwise alignments (-quicktree)
            format: ( "" , " -quicktree")[ value == "fast"]
            simple: true
            mandatory: true
            name: quicktree
            command: false
            type: !mobyle/stringtype
                default: slow
                options:
                - {label: Slow, value: slow}
                - {label: Fast, value: fast}
        - !mobyle/inputprogramparameter
            prompt: Protein or DNA (-type)
            format: ("", " -type="+str(value))[value is not None]
            name: typeseq
            command: false
            type: !mobyle/stringtype
                default: auto
                options:
                - {label: Automatic, value: auto}
                - {label: Protein, value: protein}
                - {label: DNA, value: dna}
    - !mobyle/inputprogramparagraph
        comment: Multiple alignments are carried out in 3 stages :1) all sequences
            are compared to each other (pairwise alignments);2) a dendrogram (like
            a phylogenetic tree) is constructed, describing the approximate groupings
            of the sequences by similarity (stored in a file).3) the final multiple
            alignment is carried out, using the dendrogram as a guide.Pairwise alignment
            parameters control the speed/sensitivity of the initial alignments.Multiple
            alignment parameters control the gaps in the final multiple alignments.
        prompt: Multiple Alignments parameters
        name: multalign
        argpos: 3
        children:
        - !mobyle/inputprogramparameter
            prompt: Gap opening penalty (-gapopen)
            format: ( "" , " -gapopen=" + str( value ))[ value is not None and value
                != vdef ]
            name: gapopen
            command: false
            type: !mobyle/floattype {default: 10.0}
        - !mobyle/inputprogramparameter
            prompt: Gap extension penalty (-gapext)
            format: ( "" , " -gapext=" + str( value ))[ value is not None and value
                != vdef ]
            name: gapext
            command: false
            type: !mobyle/floattype {default: 0.2}
        - !mobyle/inputprogramparameter
            comment: "End gap separation treats end gaps just\n\t\tlike internal gaps\
                \ for the purposes of avoiding gaps that\n\t\tare too close (set by\
                \ GAP SEPARATION DISTANCE above). If\n\t\tyou turn this off, end gaps\
                \ will be ignored for this\n\t\tpurpose. This is useful when you wish\
                \ to align fragments\n\t\twhere the end gaps are not biologically\
                \ meaningful."
            prompt: No end gap separation penalty (-endgaps)
            format: ( "" ," -endgaps" )[ value ]
            name: endgaps
            command: false
            type: !mobyle/booleantype {default: false}
        - !mobyle/inputprogramparameter
            comment: "Gap separation distance tries to decrease\n\t\tthe chances of\
                \ gaps being too close to each other. Gaps\n\t\tthat are less than\
                \ this distance apart are penalised more\n\t\tthan other gaps. This\
                \ does not prevent close gaps; it makes\n\t\tthem less frequent, promoting\
                \ a block-like appearance of\n\t\tthe alignment."
            prompt: Gap separation penalty range (-gapdist)
            format: ( "" , " -gapdist=" + str( value ))[ value is not None and value
                != vdef]
            name: gapdist
            command: false
            type: !mobyle/integertype {default: 8}
        - !mobyle/inputprogramparameter
            comment: "Delays the alignment of the most distantly\n\t\trelated sequences\
                \ until after the most closely related\n\t\tsequences have been aligned.\
                \ The setting shows the percent\n\t\tidentity level required to delay\
                \ the addition of a\n\t\tsequence; sequences that are less identical\
                \ than this level\n\t\tto any other sequences will be aligned later."
            prompt: 'Delay divergent sequences : % ident. for delay (-maxdiv)'
            format: ( "" , " -maxdiv=" + str( value ))[ value is not None and value
                != vdef ]
            name: maxdiv
            command: false
            type: !mobyle/integertype {default: 30}
        - !mobyle/inputprogramparameter
            prompt: File for new guide tree (-newtree)
            format: ( "" , " -newtree=" + str( value ))[value is not None]
            name: newtree
            command: false
            type: !mobyle/stringtype {}
        - !mobyle/inputprogramparameter
            comment: You can give a previously computed tree (.dnd file) - on the
                same data
            prompt: File for old guide tree (-usetree)
            format: ( "" ," -usetree=" + str( value ))[value is not None]
            name: usetree
            command: false
            type: !mobyle/formattedtype
                format_terms: ['EDAM_format:1910']
                data_terms: ['EDAM_data:0872']
        - !mobyle/inputprogramparagraph
            prompt: Protein parameters
            name: multalign_prot
            precond: {typeseq: protein}
            children:
            - !mobyle/inputprogramparameter
                comment: "There are three 'in-built' series of weight\n\t\tmatrices\
                    \ offered. Each consists of several matrices which\n\t\twork differently\
                    \ at different evolutionary distances. To\n\t\tsee the exact details,\
                    \ read the documentation. Crudely, we\n\t\tstore several matrices\
                    \ in memory, spanning the full range\n\t\tof amino acid distance\
                    \ (from almost identical sequences to\n\t\thighly divergent ones).\
                    \ For very similar sequences, it is\n\t\tbest to use a strict\
                    \ weight matrix which only gives a high\n\t\tscore to identities\
                    \ and the most favoured conservative\n\t\tsubstitutions. For more\
                    \ divergent sequences, it is\n\t\tappropriate to use 'softer'\
                    \ matrices which give a high\n\t\tscore to many other frequent\
                    \ substitutions.BLOSUM (Henikoff). These matrices appear to\n\t\
                    \tbe the best available for carrying out data base similarity\n\
                    \t\t(homology searches). The matrices used are: Blosum80, 62,\n\
                    \t\t40 and 30.The Gonnet Pam 250 matrix has been reported\n\t\t\
                    as the best single matrix for alignment, if you only choose\n\t\
                    \tone matrix. Our experience with profile database searches\n\t\
                    \tis that the Gonnet series is unambiguously superior to the\n\
                    \t\tBlosum series at high divergence. However, we did not get\n\
                    \t\tthe series to perform systematically better than the Blosum\n\
                    \t\tseries in Clustal W (communication of the authors).PAM (Dayhoff).\
                    \ These have been extremely\n\t\twidely used since the late '70s.\
                    \ We use the PAM 120, 160,\n\t\t250 and 350 matrices."
                prompt: Protein weight matrix (-matrix)
                format: ("", " -matrix="+str(value))[value is not None and value!=vdef]
                name: matrix
                command: false
                type: !mobyle/stringtype
                    default: gonnet
                    options:
                    - {label: Gonnet series, value: gonnet}
                    - {label: BLOSUM series, value: blosum}
                    - {label: PAM series, value: pam}
                    - {label: Identity matrix, value: id}
            - !mobyle/inputprogramparameter
                prompt: Negative values in matrix ? (-negative)
                format: ( "" , " -negative" )[ value ]
                name: negative
                command: false
                type: !mobyle/booleantype {default: false}
            - !mobyle/inputprogramparameter
                comment: "Residue specific penalties are amino acid\n\t\tspecific\
                    \ gap penalties that reduce or increase the gap\n\t\topening penalties\
                    \ at each position in the alignment or\n\t\tsequence. As an example,\
                    \ positions that are rich in glycine\n\t\tare more likely to have\
                    \ an adjacent gap than positions that\n\t\tare rich in valine.Table\
                    \ of residue specific gap modification\n\t\tfactors:A 1.13 M 1.29C\
                    \ 1.13 N 0.63D 0.96 P 0.74E 1.31 Q 1.07F 1.20 R 0.72G 0.61 S 0.76H\
                    \ 1.00 T 0.89I 1.32 V 1.25K 0.96 Y 1.00L 1.21 W 1.23The values\
                    \ are normalised around a mean value of 1.0 for H. The lower the\
                    \ value, the greater the chance of having an adjacent gap. These\
                    \ are derived from the original table of relative frequencies\
                    \ of gaps adjacent to each residue (12) by subtraction from 2.0."
                prompt: Residue specific gaps off (-nopgap)
                format: ( "" , " -nopgap" )[ value ]
                name: pgap
                command: false
                type: !mobyle/booleantype {default: false}
            - !mobyle/inputprogramparameter
                comment: "Hydrophilic gap penalties are used to\n\t\tincrease the\
                    \ chances of a gap within a run (5 or more\n\t\tresidues) of hydrophilic\
                    \ amino acids; these are likely to\n\t\tbe loop or random coil\
                    \ regions where gaps are more\n\t\tcommon. The residues that are\
                    \ 'considered' to be\n\t\thydrophilic are set by menu item 3."
                prompt: Hydrophilic gaps off (-nohgap)
                format: ( "" , " -nohgap" )[ value ]
                name: hgap
                command: false
                type: !mobyle/booleantype {default: false}
            - !mobyle/inputprogramparameter {prompt: Hydrophilic residues list (-hgapresidues),
                format: '( '''' , '' -hgapresidues="%s"'' % str(value) )[ value and
                    value != vdef ]', name: hgapresidues, command: false}
        - !mobyle/inputprogramparagraph
            prompt: DNA parameters
            name: multalign_dna
            precond: {typeseq: dna}
            children:
            - !mobyle/inputprogramparameter
                comment: "1) IUB. This is the default scoring matrix\n\t\tused by\
                    \ BESTFIT for the comparison of nucleic acid\n\t\tsequences. X's\
                    \ and N's are treated as matches to any IUB\n\t\tambiguity symbol.\
                    \ All matches score 1.9; all mismatches for\n\t\tIUB symbols score\
                    \ 0.2) CLUSTALW(1.6). The previous system used\n\t\tby ClustalW,\
                    \ in which matches score 1.0 and mismatches\n\t\tscore 0. All\
                    \ matches for IUB symbols also score 0."
                prompt: DNA weight matrix (-dnamatrix)
                format: ("", " -dnamatrix=" + str(value))[value is not None and value!=vdef]
                name: dnamatrix
                command: false
                type: !mobyle/stringtype
                    default: iub
                    options:
                    - {label: IUB, value: iub}
                    - {label: CLUSTALW, value: clustalw}
            - !mobyle/inputprogramparameter
                comment: "A weight of\n\t\tzero means that the transitions are scored\
                    \ as mismatches; a\n\t\tweight of 1 gives transitions the full\
                    \ match score. For\n\t\tdistantly related DNA sequences, the weight\
                    \ should be near\n\t\tto zero; for closely related sequences it\
                    \ can be useful to\n\t\tassign a higher score."
                prompt: Transitions weight (between 0 and 1) (-transweight)
                format: ( "" , " -transweight=" + str( value ) )[ value is not None
                    and value != vdef ]
                name: transweight
                command: false
                type: !mobyle/floattype {default: 0.5}
    - !mobyle/inputprogramparagraph
        comment: "These similarity scores are calculated from fast,\n\t  approximate,\
            \ global alignments, which are controlled by 4\n\t  parameters. 2 techniques\
            \ are used to make these alignments very\n\t  fast: 1) only exactly matching\
            \ fragments (k-tuples) are\n\t  considered; 2) only the 'best' diagonals\
            \ (the ones with most\n\t  k-tuple matches) are used."
        prompt: Fast Pairwise Alignments parameters
        name: fastpw
        precond: {quicktree: fast}
        argpos: 4
        children:
        - !mobyle/inputprogramparameter
            comment: 'K-TUPLE SIZE: This is the size of exactly matching fragment
                that is used. INCREASE for speed (max= 2 for proteins; 4 for DNA),
                DECREASE for sensitivity. For longer sequences (e.g. >1000 residues)
                you may need to increase the default.'
            prompt: Word size (-ktuple)
            format: ( "" , " -ktuple=" + str( value ) )[value is not None and value
                != vdef ]
            argpos: 2
            name: ktuple
            command: false
            type: !mobyle/integertype {default: 1}
        - !mobyle/inputprogramparameter
            comment: "The number of k-tuple matches on each\n\t\tdiagonal (in an imaginary\
                \ dot-matrix plot) is\n\t\tcalculated. Only the best ones (with most\
                \ matches) are used\n\t\tin the alignment. This parameter specifies\
                \ how\n\t\tmany. Decrease for speed; increase for sensitivity."
            prompt: Number of best diagonals (-topdiags)
            format: ( "" , " -topdiags=" + str( value ))[value is not None and value
                != vdef ]
            name: topdiags
            command: false
            type: !mobyle/integertype {default: 5}
        - !mobyle/inputprogramparameter
            comment: "WINDOW SIZE: This is the number of\n\t\tdiagonals around each\
                \ of the 'best' diagonals that will be\n\t\tused. Decrease for speed;\
                \ increase for sensitivity"
            prompt: Window around best diags (-window)
            format: ( "" , " -window=" + str( value ) )[ value is not None and value
                != vdef ]
            name: window
            command: false
            type: !mobyle/integertype {default: 5}
        - !mobyle/inputprogramparameter
            comment: "This is a penalty for each gap in the fast\n\t\talignments.\
                \ It has little affect on the speed or\n\t\tsensitivity except for\
                \ extreme values."
            prompt: Gap penalty (-pairgap)
            format: ( "" , " -pairgap=" + str( value ))[ value is not None and value
                != vdef ]
            name: pairgap
            command: false
            type: !mobyle/floattype {default: 3.0}
        - !mobyle/inputprogramparameter
            prompt: Percent or absolute score ? (-score)
            format: ( "" , " -score=" +str( value ) )[value is not None or value !=
                vdef]
            name: score
            command: false
            type: !mobyle/stringtype
                default: percent
                options:
                - {label: Percent, value: percent}
                - {label: Absolute, value: absolute}
    - !mobyle/inputprogramparagraph
        comment: "These parameters do not have any affect on the\n\t  speed of the\
            \ alignments. They are used to give initial alignments\n\t  which are\
            \ then rescored to give percent identity scores. These %\n\t  scores are\
            \ the ones which are displayed on the screen. The scores\n\t  are converted\
            \ to distances for the trees."
        prompt: Slow Pairwise Alignments parameters
        name: slowpw
        precond: {quicktree: slow}
        argpos: 4
        children:
        - !mobyle/inputprogramparameter
            prompt: Gap opening penalty (-pwgapopen)
            format: ( "" , " -pwgapopen=" + str( value ) )[ value is not None and
                value != vdef ]
            name: pwgapopen
            command: false
            type: !mobyle/floattype {default: 10.0}
        - !mobyle/inputprogramparameter
            prompt: Gap extension penalty (-pwgapext)
            format: ( "" , " -pwgapext=" + str( value ) )[ value is not None and value
                != vdef ]
            name: pwgapext
            command: false
            type: !mobyle/floattype {default: 0.1}
        - !mobyle/inputprogramparagraph
            prompt: Protein parameters
            name: slowpw_prot
            precond: {typeseq: protein}
            children:
            - !mobyle/inputprogramparameter
                comment: "The scoring table which describes the\n\t\tsimilarity of\
                    \ each amino acid to each other. For DNA, an\n\t\tidentity matrix\
                    \ is used.BLOSUM (Henikoff). These matrices appear to\n\t\tbe\
                    \ the best available for carrying out data base similarity\n\t\
                    \t(homology searches). The matrices used are: Blosum80, 62,\n\t\
                    \t40 and 30.The Gonnet Pam 250 matrix has been reported\n\t\t\
                    as the best single matrix for alignment, if you only choose\n\t\
                    \tone matrix. Our experience with profile database searches\n\t\
                    \tis that the Gonnet series is unambiguously superior to the\n\
                    \t\tBlosum series at high divergence. However, we did not get\n\
                    \t\tthe series to perform systematically better than the Blosum\n\
                    \t\tseries in Clustal W (communication of the authors).PAM (Dayhoff).\
                    \ These have been extremely\n\t\twidely used since the late '70s.\
                    \ We use the PAM 120, 160,\n\t\t250 and 350 matrices."
                prompt: Protein weight matrix (-pwmatrix)
                format: ( "" , " -pwmatrix=" + str(value) )[value is not None and
                    value != vdef ]
                name: pwmatrix
                command: false
                type: !mobyle/stringtype
                    default: gonnet
                    options:
                    - {label: BLOSUM30 (Henikoff), value: blosum}
                    - {label: Gonnet 250, value: gonnet}
                    - {label: PAM350 (Dayhoff), value: pam}
                    - {label: Identity matrix, value: id}
        - !mobyle/inputprogramparagraph
            prompt: DNA parameters
            name: slowpw_dna
            precond: {typeseq: dna}
            children:
            - !mobyle/inputprogramparameter
                comment: "For DNA, a single matrix (not a series) is\n\t\tused. Two\
                    \ hard-coded matrices are available:1) IUB. This is the default\
                    \ scoring matrix\n\t\tused by BESTFIT for the comparison of nucleic\
                    \ acid\n\t\tsequences. X's and N's are treated as matches to any\
                    \ IUB\n\t\tambiguity symbol. All matches score 1.9; all mismatches\
                    \ for\n\t\tIUB symbols score 0.2) CLUSTALW(1.6). The previous\
                    \ system used\n\t\tby ClustalW, in which matches score 1.0 and\
                    \ mismatches\n\t\tscore 0. All matches for IUB symbols also score\
                    \ 0."
                prompt: DNA weight matrix (-pwdnamatrix)
                format: ( "" , " -pwdnamatrix=" + str(value) )[ value is not None
                    and value != vdef ]
                name: pwdnamatrix
                command: false
                type: !mobyle/stringtype
                    default: iub
                    options:
                    - {label: IUB, value: iub}
                    - {label: CLUSTALW, value: clustalw}
    - !mobyle/inputprogramparagraph
        prompt: Output parameters
        name: outputparam
        argpos: 5
        children:
        - !mobyle/inputprogramparameter
            prompt: Output format (-output)
            format: ( "" , " -output=" + str( value) )[ value is not None ]
            name: outputformat
            command: false
            type: !mobyle/stringtype
                default: 'null'
                options:
                - {label: CLUSTAL, value: 'null'}
                - {label: FASTA, value: FASTA}
                - {label: GCG, value: GCG}
                - {label: GDE, value: GDE}
                - {label: PHYLIP, value: PHYLIPI}
                - {label: PIR, value: PIR}
                - {label: NEXUS, value: NEXUS}
        - !mobyle/inputprogramparameter
            prompt: Output sequence numbers in the output file (for clustalw output
                only) (-seqnos)
            format: ( "" , " -seqnos=on")[ value is not None and value != vdef]
            name: seqnos
            precond:
                outputformat: {'#eq': None}
            command: false
            type: !mobyle/booleantype {default: false}
        - !mobyle/inputprogramparameter
            prompt: Result order (-outorder)
            format: ( "" , " -outorder=" + str(value))[ value is not None and value
                != vdef ]
            name: outorder
            command: false
            type: !mobyle/stringtype
                default: aligned
                options:
                - {label: Input, value: input}
                - {label: Aligned, value: aligned}
        - !mobyle/inputprogramparameter
            prompt: Sequence alignment file name (-outfile)
            format: ( "" , " -outfile=" + str( value))[ value is not None ]
            name: outfile
            command: false
            type: !mobyle/stringtype {}
        - !mobyle/inputprogramparameter
            prompt: Upper case (for GDE output only) (-case)
            format: ( "" , " -case=upper" )[ value ]
            argpos: 2
            name: gde_lower
            precond: {outputformat: GDE}
            command: false
            type: !mobyle/booleantype {default: false}
outputs: !mobyle/outputparagraph
    children:
    - !mobyle/outputprogramparagraph
        comment: Multiple alignments are carried out in 3 stages :1) all sequences
            are compared to each other (pairwise alignments);2) a dendrogram (like
            a phylogenetic tree) is constructed, describing the approximate groupings
            of the sequences by similarity (stored in a file).3) the final multiple
            alignment is carried out, using the dendrogram as a guide.Pairwise alignment
            parameters control the speed/sensitivity of the initial alignments.Multiple
            alignment parameters control the gaps in the final multiple alignments.
        prompt: Multiple Alignments parameters
        name: multalign
        argpos: 3
        children:
        - !mobyle/outputprogramparameter
            prompt: Output tree
            filenames: newtree
            name: newtreefile
            precond:
                newtree: {'#ne': None}
            type: !mobyle/formattedtype
                format_terms: ['EDAM_format:1910']
                data_terms: ['EDAM_data:0872']
    - !mobyle/outputprogramparagraph
        prompt: Output parameters
        name: outputparam
        argpos: 5
        children:
        - !mobyle/outputprogramparameter
            comment: 'In the conservation line output in the clustal format alignment
                file, three characters are used:''*'' indicates positions which have
                a single, fully conserved residue.'':'' indicates that one of the
                following ''strong'' groups is fully conserved (STA,NEQK,NHQK,NDEQ,QHRK,MILV,MILF,HY,FYW).''.''
                indicates that one of the following ''weaker'' groups is fully conserved
                (CSA,ATV,SAG,STNK,STPA,SGND,SNDEQK,NDEQHK,NEQHRK,FVLIM,HFY).These
                are all the positively scoring groups that occur in the Gonnet Pam250

                matrix. The strong and weak groups are defined as strong score >0.5
                and weak

                score =<0.5 respectively.'
            prompt: Alignment file
            filenames: ("*.aln", str(outfile))[outfile is not None]
            name: clustalaligfile
            precond:
                outputformat: {'#eq': None}
            type: !mobyle/formattedtype
                format_terms: ['EDAM_format:1982']
                data_terms: ['EDAM_data:0863']
        - !mobyle/outputprogramparameter
            prompt: Alignment file
            filenames: '{ "FASTA":"*.fasta", "NEXUS": "*.nxs", "PHYLIPI": "*.phy"
                , ''GCG'': ''*.msf'' }[outputformat ]'
            name: aligfile
            precond:
                outputformat:
                    '#in': [FASTA, NEXUS, GCG, PHYLIPI]
            type: !mobyle/formattedtype
                data_terms: ['EDAM_data:0863']
        - !mobyle/outputprogramparameter
            prompt: Sequences file
            filenames: ((("*.fasta","*.pir")[outputformat == 'PIR'],"*.gde")[outputformat
                == 'GDE'],str(outfile))[outfile is not None]
            name: seqfile
            precond:
                outputformat:
                    '#in': [GDE, PIR]
            type: !mobyle/formattedtype
                data_terms: ['EDAM_data:2044']
        - !mobyle/outputprogramparameter
            prompt: Tree file
            filenames: '"*.dnd"'
            name: dndfile
            precond:
                newtree: {'#eq': None}
            type: !mobyle/formattedtype
                format_terms: ['EDAM_format:1910']
                data_terms: ['EDAM_data:0872']
    - !mobyle/outputprogramparameter
        prompt: Standard output
        filenames: '"clustalw-multialign.out"'
        name: stdout
        output_type: stdout
        type: !mobyle/formattedtype
            data_terms: ['EDAM_data:2048']
    - !mobyle/outputprogramparameter
        prompt: Standard error
        filenames: '"clustalw-multialign.err"'
        name: stderr
        type: !mobyle/formattedtype
            data_terms: ['EDAM_data:2048']
operations: ['EDAM_operation:0492']
topics: ['EDAM_topic:0182']
command: clustalw -align
env: {}
