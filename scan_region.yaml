!mobyle/program
name: scan_region
title: scan_region
description: "Scan genomic regions in a query-file against a DB-file which contains\n\
    \        chromosome locations for various genomics features"
inputs: !mobyle/inputparagraph
    children:
    - !mobyle/inputprogramparameter {comment: "A file containing CNV calls, that could\
            \ be generated by the\n                test operation of detect_cnv program.",
        prompt: CNV calls file (cnv), format: '( "" , " " + str(value) )[ value is
            not None]', simple: true, argpos: 1, mandatory: true, name: cnvfile, command: false}
    - !mobyle/inputprogramparameter
        prompt: Reference genes for CNV calls generated using hg18 (Mar 2006, NCBI
            build 36) human genome assembly
        format: ( "" , " /path/to/penncnv/shared/data/dir/" + str(value) )[ value
            is not None ]
        simple: true
        argpos: 2
        mandatory: true
        name: reffile
        command: false
        type: !mobyle/stringtype
            default: 'null'
            options:
            - {label: Choose a Reference genes databases, value: 'null'}
            - {label: UCSC refGene Annotation, value: hg18_refGene.txt}
            - {label: UCSC knownGene Annotation, value: UCSCknownGene.txt}
    - !mobyle/inputprogramparameter
        comment: "--refgene:  specify that the database file is in refGene format\
            \ from UCSC genome\n               browser.--refcds:  specify that the\
            \ database file is in refGene format from UCSC genome\n              \
            \ browser, but user is only interested in the overlap of coding\n    \
            \           region (first exon to last exon).--refexon:   specify that\
            \ the database file is in refGene format from UCSC genome\n          \
            \     browser, but user is only interested in the overlap of query\n \
            \              with exons.--knowngene:  specify that the database file\
            \ is in knownGene format from UCSC\n               genome browser."
        prompt: Flags specifying type of databases
        format: ( "" , " " + str(value) )[ value is not None  and value !=vdef]
        simple: true
        argpos: 3
        mandatory: true
        name: reference
        command: false
        type: !mobyle/stringtype
            default: 'null'
            options:
            - {label: Choose a flags specifying type of databases, value: 'null'}
            - {label: Database is UCSC refGene annotation file, value: --refgene}
            - {label: Database is UCSC refGene with exon annotation, value: --refcds}
            - {label: Database is UCSC refGene with coding sequence annotation, value: --refexon}
            - {label: Database is UCSC knownGene annotation file, value: --knowngene}
    - !mobyle/inputprogramparagraph
        prompt: Database-specific arguments
        name: dbfile-specific
        children:
        - !mobyle/inputprogramparameter
            comment: "This argument is used in conjunction with the --refgene argument,\n\
                \         to specify that the alternative gene symbol in the\n   \
                \            \"name2\" field in the refGene file be printed in the\
                \ output."
            prompt: Use name2 annotation in refGene file in output
            format: ( "" , " --name2  " )[ value]
            argpos: 3
            name: name2
            precond: {reference: --refgene}
            command: false
            type: !mobyle/booleantype {default: false}
        - !mobyle/inputprogramparameter
            comment: "Specify a cross-reference file for the RefGene track in UCSC\n\
                \               genome browser, so that in the output, the gene identifier\n\
                \               (gene name or refseq id) are replaced by the gene\
                \ symbol specified\n                in the link file. (If not found\
                \ in the reflink file, the\n               gene identifiers are still\
                \ used)."
            prompt: Specify a cross-reference file for the RefGene track in UCSC genome
                browser
            format: ( "" , " --reflink /path/to/penncnv/shared/data/dir/hg18_refLink.txt
                " )[ value]
            argpos: 3
            name: reflink
            precond:
                reference: {'#ne': --knowngene}
            command: false
            type: !mobyle/booleantype {default: false}
        - !mobyle/inputprogramparameter
            comment: "Specify a cross-reference file for the knownGene track in UCSC\n\
                \               genome browser, so that in the output, the gene identifier\n\
                \               (gene name or refseq id) are replaced by the gene\
                \ symbol specified\n                in the kgxref file. (If not found\
                \ in the kgxref file, the\n               gene identifiers are still\
                \ used)."
            prompt: Specify a cross-reference file for the knownGene track in UCSC  genome
                browser
            format: ( "" , " --kgxref /path/to/penncnv/shared/data/dir/UCSCkgXref.txt
                " )[ value]
            argpos: 3
            name: kgxref
            precond: {reference: --knowngene}
            command: false
            type: !mobyle/booleantype {default: false}
    - !mobyle/inputprogramparagraph
        prompt: Criteria for defining query-db match
        name: query-db-match
        children:
        - !mobyle/inputprogramparameter
            comment: "Condense overlapped regions in the query file into non-over-lapped\n\
                \         regions. When this argument is set, the annotation for\n\
                \               each query (the strings after the chromosome location\
                \ in each\n               line of the query file) will not in the\
                \ output."
            prompt: Condense and eliminate overlapping regions in query
            format: ( "" , " --condense_query " )[ value]
            argpos: 3
            name: condense_query
            command: false
            type: !mobyle/booleantype {default: false}
        - !mobyle/inputprogramparameter
            comment: "Specify the score threshold in the database file to include\
                \ in the\n               search for overlaps. This argument is file\
                \ format dependent."
            prompt: Score threshold for database in UCSC annotation file
            format: ( "" , " --score_threshold " + str(value) )[ value is not None]
            argpos: 3
            name: score_threshold
            command: false
            type: !mobyle/floattype {}
        - !mobyle/inputprogramparameter
            comment: "Specify the normalized score threshold in the database file\
                \ to\n               include in the search for overlaps. This argument\
                \ is file format dependent."
            prompt: Normalized score threshold for database in UCSC annotation file
            format: ( "" , " --normscore_threshold " + str(value) )[ value is not
                None]
            argpos: 3
            name: normscore_threshold
            command: false
            type: !mobyle/floattype {}
    - !mobyle/inputprogramparagraph
        prompt: Expansion of query to find match
        name: expansion_query
        children:
        - !mobyle/inputprogramparameter
            comment: "Expand the query region on the left side (5 megabases in forward\
                \ strand,\n               3 megabases in reverse strand) to find overlap\
                \ (used in conjunction with\n               --refgene or --knowngene\
                \ argument)."
            prompt: Expand left side of query regions (overwrite --expandmax)
            format: ( "" , " --expandleft " + str(value) )[ value is not None]
            argpos: 3
            name: expandleft
            precond:
                '#and':
                -   '#or':
                    - {reference: --knowngene}
                    - {reference: --refgene}
                - {'#not': expandmax}
            command: false
            type: !mobyle/integertype {}
        - !mobyle/inputprogramparameter
            comment: "Expand the query region on the right side (3 megabases in forward\n\
                \               strand, 5 megabases in reverse strand) to find overlap\
                \ (used in conjunction\n                with --refgene or --knowngene\
                \ argument)."
            prompt: Expand right side of query regions (overwrite --expandmax)
            format: ( "" , " --expandright " + str(value) )[ value is not None]
            argpos: 3
            name: expandright
            precond:
                '#and':
                -   '#or':
                    - {reference: --knowngene}
                    - {reference: --refgene}
                - {'#not': expandmax}
            command: false
            type: !mobyle/integertype {}
        - !mobyle/inputprogramparameter
            comment: "Maximum expansion size of the query region on both side to find\n\
                \               at least one overlap (used in junction with --refgene\
                \ or\n               --knowngene argument). After query expansion,\
                \ only the closet\n               gene will be printed; other genes,\
                \ even if overlapping with the\n               query after expansion,\
                \ will not be printed."
            prompt: Size of maximum expansion for query region to find overlap
            format: ( "" , " --expandmax " + str(value) )[ value is not None]
            argpos: 3
            name: expandmax
            precond:
                '#or':
                - {reference: --knowngene}
                - {reference: --refgene}
            command: false
            type: !mobyle/integertype {}
    - !mobyle/inputprogramparameter
        comment: "Expand the chromosome region specified in the database-file to find\n\
            \               overlap with the query regions."
        prompt: Expand definition of gene/cds/exon at both sides
        format: ( "" , " --expanddb " + str(value) )[ value is not None]
        argpos: 3
        name: expanddb
        command: false
        type: !mobyle/integertype {}
    - !mobyle/inputprogramparagraph
        prompt: Input/output options
        name: output_option
        children:
        - !mobyle/inputprogramparameter
            comment: "Instead of printing the query region, only print the overlapped\n\
                \               portion of the query region and template region."
            prompt: Print overlapped portion of region only
            format: ( "" , " --overlap " )[ value]
            argpos: 3
            name: overlap
            command: false
            type: !mobyle/booleantype {default: false}
        - !mobyle/inputprogramparameter
            comment: "Print the region in database file, rather than query file, when\
                \ an\n               overlapped hit is found."
            prompt: Print database region (default is to print query region)
            format: ( "" , " --dbregion " )[ value]
            argpos: 3
            name: dbregion
            command: false
            type: !mobyle/booleantype {default: false}
        - !mobyle/inputprogramparameter
            comment: "Append the score and normscore for the overlapped template\n\
                \               region to the output for database files downloaded\
                \ as UCSC tables."
            prompt: Append extra information from annotation file to output
            format: ( "" , " --append " )[ value]
            argpos: 3
            name: append
            command: false
            type: !mobyle/booleantype {default: false}
        - !mobyle/inputprogramparameter
            prompt: Force to print query info when Print database region is used
            format: ( "" , " --queryinfo " )[ value]
            argpos: 3
            name: queryinfo
            precond: dbregion
            command: false
            type: !mobyle/booleantype {default: false}
outputs: !mobyle/outputparagraph
    children:
    - !mobyle/outputprogramparameter {prompt: Output file, filenames: '"scan_region.out"',
        name: output_file, output_type: stdout}
    - !mobyle/outputprogramparameter
        prompt: Standard error
        filenames: '"scan_region.err"'
        name: stderr
        type: !mobyle/formattedtype
            data_terms: ['EDAM_data:2048']
command: scan_region.pl
env: {}
