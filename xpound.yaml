_type: Program
name: xpound
title: Xpound
description: Software for exon trapping
authors: Thomas and Skolnick
inputs:
    _type: InputParagraph
    children:
    -   _type: InputProgramParameter
        comment: "Everything after a % on a line in the input\n          file is ignored.\
            \ Other than comment xpound expects only white\n          space, which\
            \ is also ignored, or IUPAC characters:A C M G R S V T W Y H K D B Nin\
            \ upper or lower case. Characters which do\n          not uniquely determine\
            \ a base, such as N, B, S and so on, are\n          all interpreted as\
            \ a C.Xpound will not accept the IUPAC character -,\n          all occurences\
            \ of which should be stripped from the input file\n          beforehand."
        prompt: DNA sequence File
        name: seq
        simple: true
        argpos: '2'
        format: {perl: '" <$value"', python: '" <"+str(value)'}
        mandatory: true
        type:
            _type: FormattedType
            format_terms: ['EDAM_format:1957']
            data_terms: EDAM_data:2044
    -   _type: InputParagraph
        prompt: Report options
        name: report_options
        children:
        -   _type: InputProgramParameter
            prompt: Reports regions of bases for which the probability of coding is
                high (xreport)
            name: report
            argpos: '20'
            format: {perl: '($value) ? " ; xreport <xpound.out " : ""', python: '(
                    "" , " ; xreport <xpound.out " )[ value ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Cut off value for report
            name: cut_off
            argpos: '21'
            format: {perl: '(defined $value and $value != $vdef) ? " $value " : ""',
                python: '( "" , " " + str(value) )[ value is not None and value !=
                    vdef]'}
            precond: report
            type: {_type: FloatType, default: 0.75}
        -   _type: InputProgramParameter
            prompt: Minimum length value for report
            name: min_length
            argpos: '22'
            format: {perl: '(defined $value and $value != $vdef) ? " $value " : ""',
                python: '( "" , " " + str(value) )[ value is not None and value !=
                    vdef]'}
            precond: report
            type: {_type: IntegerType, default: 0}
    -   _type: InputParagraph
        prompt: Postscript options
        name: postscript_options
        children:
        -   _type: InputProgramParameter
            prompt: Produces a file of graphs in PostScript format (xpscript)
            name: postscript
            argpos: '30'
            format: {perl: '($value) ? "; xpscript xpound.out" : ""', python: '( ""
                    , "; xpscript xpound.out" )[ value ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Orientation (-l)
            name: orientation
            argpos: '31'
            format: {perl: '($value eq "lanscape") ? " -l " : ""', python: '( "" ,
                    " -l " )[ value == "lanscape" ]'}
            precond: postscript
            type:
                _type: StringType
                default: portrait
                options:
                - {label: Portrait, value: portrait}
                - {label: Lanscape, value: lanscape}
        -   _type: InputProgramParameter
            prompt: Rows of plots per page (-r)
            name: rows
            argpos: '32'
            format: {perl: '(defined $value and $value != $vdef) ? " -r $value " :
                    ""', python: '( "" , " -r " + str(value) )[ value is not None
                    and value != vdef]'}
            precond: postscript
            type: {_type: IntegerType, default: 5}
        -   _type: InputProgramParameter
            prompt: Columns of plots per page (-c)
            name: columns
            argpos: '32'
            format: {perl: '(defined $value and $value != $vdef) ? " -c $value " :
                    ""', python: '( "" , " -c " + str(value) )[ value is not None
                    and value != vdef]'}
            precond: postscript
            type: {_type: IntegerType, default: 1}
        -   _type: InputProgramParameter
            prompt: Draw a line at this level (-hi)
            name: high
            argpos: '33'
            format: {perl: '(defined $value and $value != $vdef) ? " -hi $value "
                    : ""', python: '( "" , " -hi " + str(value) )[ value is not None
                    and value != vdef]'}
            precond: postscript
            type: {_type: FloatType, default: 0.75}
        -   _type: InputProgramParameter
            prompt: Draw a line at this level (-lo)
            name: low
            argpos: '34'
            format: {perl: '(defined $value and $value != $vdef) ? " -lo $value "
                    : ""', python: '( "" , " -lo " + str(value) )[ value is not None
                    and value != vdef]'}
            precond: postscript
            type: {_type: FloatType, default: 0.5}
outputs:
    _type: OutputParagraph
    children:
    -   _type: OutputProgramParameter
        prompt: Output file
        name: outfile
        filenames: {perl: '"xpound.out"', python: '"xpound.out"'}
        output_type: stdout
    -   _type: OutputParagraph
        prompt: Report options
        name: report_options
        children:
        -   _type: OutputProgramParameter
            prompt: Report file
            name: report_file
            filenames: {perl: '"xreport.out"', python: '"xreport.out"'}
            precond: report
    -   _type: OutputParagraph
        prompt: Postscript options
        name: postscript_options
        children:
        -   _type: OutputProgramParameter
            prompt: PostScript file
            name: psfile
            filenames: {perl: '"xpound.ps"', python: '"xpound.ps"'}
            precond: postscript
operations: ['EDAM_operation:2454']
topics: ['EDAM_topic:0114']
references:
- {doi: null, label: 'A probabilistic model for detecting coding regions in DNA sequences.
        Alun Thomas and Mark H Skolnick, IMA Journal of Mathematics Applied in Medicine
        and Biology, 1994, 11, 149-160.', url: null}
public_name: xpound
command: {path: null, value: xpound}
