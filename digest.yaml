_type: Program
name: digest
title: digest
description: Reports on protein proteolytic enzyme or reagent cleavage sites
inputs:
    _type: InputParagraph
    children:
    -   _type: InputParagraph
        prompt: Input section
        name: e_input
        children:
        -   _type: InputProgramParameter
            prompt: seqall option
            name: e_seqall
            simple: true
            argpos: '1'
            format: {python: '("", " -seqall=" + str(value))[value is not None]'}
            mandatory: true
            type:
                _type: FormattedType
                format_terms: ['EDAM_format:1927', 'EDAM_format:2200', 'EDAM_format:1935',
                    'EDAM_format:1936', 'EDAM_format:1948', 'EDAM_format:1948', 'EDAM_format:1957',
                    'EDAM_format:2188', 'EDAM_format:2305']
                data_terms: EDAM_data:2976
        -   _type: InputProgramParameter
            comment: Molecular weight data for amino acids
            prompt: Molecular weights data file
            name: e_mwdata
            argpos: '2'
            format: {python: '("", " -mwdata=" + str(value))[value is not None ]'}
    -   _type: InputParagraph
        prompt: Required section
        name: e_required
        children:
        -   _type: InputProgramParameter
            prompt: Enzymes and reagents
            name: e_menu
            simple: true
            argpos: '3'
            format: {python: '("", " -menu=" + str(value))[value is not None and value!=vdef]'}
            mandatory: true
            type:
                _type: StringType
                default: '1'
                options:
                - {label: Trypsin, value: '1'}
                - {label: Lys-c, value: '2'}
                - {label: Arg-c, value: '3'}
                - {label: Asp-n, value: '4'}
                - {label: V8-bicarb, value: '5'}
                - {label: V8-phosph, value: '6'}
                - {label: Chymotrypsin, value: '7'}
                - {label: Cnbr, value: '8'}
        -   _type: InputProgramParameter
            prompt: Use monoisotopic weights
            name: e_mono
            argpos: '4'
            format: {python: '("", " -mono")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
    -   _type: InputParagraph
        prompt: Advanced section
        name: e_advanced
        children:
        -   _type: InputProgramParameter
            comment: Trypsin will not normally cut after 'KR' if they are followed
                by any of  'KRIFLP'. Lys-C will not normally cut  after 'K' if it
                is followed by 'P'.  Arg-C will not normally cut after 'R'  if it
                is followed by 'P'. V8-bicarb  will not normally cut after 'E' if
                it  is followed by any of 'KREP'.  V8-phosph will not normally cut
                after  'DE' if they are followed by 'P'.  Chymotrypsin will not normally
                cut  after 'FYWLM' if they are followed by  'P'. Specifying unfavoured
                shows  these unfavoured cuts as well as the  favoured ones.
            prompt: Allow unfavoured cuts
            name: e_unfavoured
            argpos: '5'
            format: {python: '("", " -unfavoured")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            comment: Allows semi-specific and non-specific digestion. This option
                is  particularly useful for generating  lists of peptide sequences
                for  protein identification using  mass-spectrometry.
            prompt: Allow ragging
            name: e_ragging
            argpos: '6'
            format: {python: '("", " -ragging")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Ragging value (value from 1 to 4)
            name: e_termini
            argpos: '7'
            format: {python: '("", " -termini=" + str(value))[value is not None and
                    value!=vdef]'}
            type:
                _type: StringType
                default: '1'
                options:
                - {label: None, value: '1'}
                - {label: Nterm, value: '2'}
                - {label: Cterm, value: '3'}
                - {label: Nterm or cterm, value: '4'}
    -   _type: InputParagraph
        prompt: Output section
        name: e_output
        children:
        -   _type: InputProgramParameter
            comment: Used for partial digestion. Shows all cuts from favoured cut
                sites plus  1..3, 2..4, 3..5 etc but not (e.g.)  2..5. Overlaps are
                therefore  fragments with exactly one potential  cut site within it.
            prompt: Show overlapping partials
            name: e_overlap
            argpos: '8'
            format: {python: '("", " -overlap")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            comment: As for overlap but fragments containing more than one potential  cut
                site are included.
            prompt: Show all partials
            name: e_allpartials
            argpos: '9'
            format: {python: '("", " -allpartials")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Name of the report file
            name: e_outfile
            argpos: '10'
            format: {python: '("" , " -outfile=" + str(value))[value is not None]'}
            type: {_type: StringType, default: digest.report}
        -   _type: InputProgramParameter
            prompt: Choose the report output format
            name: e_rformat_outfile
            argpos: '11'
            format: {python: '("", " -rformat=" + str(value))[value is not None and
                    value!=vdef]'}
            type:
                _type: StringType
                default: SEQTABLE
                options:
                - {label: Dasgff, value: DASGFF}
                - {label: Dbmotif, value: DBMOTIF}
                - {label: Diffseq, value: DIFFSEQ}
                - {label: Embl, value: EMBL}
                - {label: Excel, value: EXCEL}
                - {label: Feattable, value: FEATTABLE}
                - {label: Genbank, value: GENBANK}
                - {label: Gff, value: GFF}
                - {label: Listfile, value: LISTFILE}
                - {label: Motif, value: MOTIF}
                - {label: Nametable, value: NAMETABLE}
                - {label: Pir, value: PIR}
                - {label: Regions, value: REGIONS}
                - {label: Seqtable, value: SEQTABLE}
                - {label: Simple, value: SIMPLE}
                - {label: Srs, value: SRS}
                - {label: Swiss, value: SWISS}
                - {label: Table, value: TABLE}
                - {label: Tagseq, value: TAGSEQ}
    -   _type: InputProgramParameter
        prompt: Turn off any prompting
        name: auto
        argpos: '12'
        format: {python: '" -auto -stdout"'}
        hidden: true
        type: {_type: StringType}
outputs:
    _type: OutputParagraph
    children:
    -   _type: OutputParagraph
        prompt: Output section
        name: e_output
        children:
        -   _type: OutputProgramParameter
            prompt: outfile_out option
            name: e_outfile_out
            filenames: {python: e_outfile}
            precond:
                e_rformat_outfile:
                    '#in': [DASGFF, DBMOTIF, DIFFSEQ, EMBL, EXCEL, FEATTABLE, GENBANK,
                        GFF, LISTFILE, MOTIF, NAMETABLE, PIR, REGIONS, SEQTABLE, SIMPLE,
                        SRS, SWISS, TABLE, TAGSEQ]
operations: ['EDAM_operation:0422']
topics: ['EDAM_topic:0141']
documentation_links: ['http://bioweb2.pasteur.fr/docs/EMBOSS/digest.html', 'http://emboss.sourceforge.net/docs/themes']
public_name: digest
command: {path: null, value: digest}
