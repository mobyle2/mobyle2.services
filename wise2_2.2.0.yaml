_type: Program
name: wise2
version: 2.2.0
title: WISE2
description: Comparisons of protein/DNA sequences
authors: E. Birney
inputs:
    _type: InputParagraph
    children:
    -   _type: InputProgramParameter
        prompt: Wise program
        name: wise2
        simple: true
        argpos: '1'
        format: {perl: '"$value"', python: str(value)}
        command: true
        mandatory: true
        type:
            _type: StringType
            default: 'Null'
            options:
            - {label: Choose a program, value: 'Null'}
            - {label: Protein to genomic DNA (genewise), value: genewise}
            - {label: Protein to cDNA (estwise), value: estwise}
    -   _type: InputParagraph
        prompt: Protein file
        name: protein_file
        children:
        -   _type: InputProgramParameter
            comment: You must  give  a protein  sequence file  in fasta format.
            prompt: Protein sequence File
            name: protein
            simple: true
            argpos: '2'
            format: {perl: '" $value"', python: '" " +str(value)'}
            precond:
                hmmer: {'#eq': None}
            mandatory: true
            type:
                _type: FormattedType
                format_terms: ['EDAM_format:2200']
                data_terms: EDAM_data:2976
        -   _type: InputProgramParameter
            comment: You must give an HMMER file.
            prompt: or Protein HMM File
            name: hmmer
            simple: true
            argpos: '2'
            format: {perl: '" $value"', python: '" " + str(value)'}
            precond:
                protein: {'#eq': None}
            mandatory: true
        -   _type: InputProgramParameter
            prompt: HMM command (-hmmer)
            name: hmmer_command
            argpos: '4'
            format: {perl: '" -hmmer"', python: '" -hmmer"'}
            precond:
                hmmer: {'#ne': None}
            hidden: true
            type: {_type: StringType}
    -   _type: InputProgramParameter
        prompt: DNA sequence File
        name: dna
        simple: true
        argpos: '3'
        format: {perl: '" $value"', python: '" " + str(value)'}
        mandatory: true
        type:
            _type: FormattedType
            format_terms: ['EDAM_format:2200']
            data_terms: EDAM_data:2977
    -   _type: InputProgramParameter
        prompt: Silent mode (-silent -quiet)
        name: quiet
        argpos: '100'
        format: {perl: '" -silent -quiet"', python: '" -silent -quiet"'}
        hidden: true
        type: {_type: StringType}
    -   _type: InputParagraph
        prompt: DNA sequence Options
        name: dna_options
        children:
        -   _type: InputProgramParameter
            prompt: Start position in dna (-u)
            name: dna_start
            format: {perl: '(defined $value) ? " -u $value" : ""', python: '( "" ,
                    " -u " + str(value) )[ value is not None ]'}
            type: {_type: IntegerType}
        -   _type: InputProgramParameter
            prompt: End position in dna (-v)
            name: dna_end
            format: {perl: '(defined $value) ? " -v $value" : ""', python: '( "" ,
                    " -v " + str(value) )[ value is not None ]'}
            type: {_type: IntegerType}
        -   _type: InputProgramParameter
            prompt: Strand comparison
            name: strand
            format: {perl: '(defined $value and $value ne $vdef) ? " $value" : ""',
                python: '( "" , " " + str(value) )[ value is not None and value !=
                    vdef]'}
            type:
                _type: StringType
                default: -tfor
                options:
                - {label: Forward (-tfor), value: -tfor}
                - {label: Reverse (-trev), value: -trev}
                - {label: Both (-both), value: -both}
        -   _type: InputProgramParameter
            prompt: Report positions as absolute to truncated/reverse sequence (-tabs)
            name: tabs
            format: {perl: '($value) ? " -tabs" : ""', python: '( "" , " -tabs" )[
                    value ]'}
            type: {_type: BooleanType, default: false}
    -   _type: InputParagraph
        prompt: Protein comparison Options
        name: protein_options
        precond:
            hmmer: {'#eq': None}
        children:
        -   _type: InputProgramParameter
            prompt: Start position in protein (-s)
            name: protein_start
            format: {perl: '(defined $value) ? " -s $value" : ""', python: '( "" ,
                    " -s " + str(value) )[ value is not None ]'}
            type: {_type: IntegerType}
        -   _type: InputProgramParameter
            prompt: End position in protein (-t)
            name: protein_end
            format: {perl: '(defined $value) ? " -t $value" : ""', python: '( "" ,
                    " -t " + str(value) )[ value is not None ]'}
            type: {_type: IntegerType}
        -   _type: InputProgramParameter
            prompt: Gap penalty (-g)
            name: gap
            format: {perl: '(defined $value and $value != $vdef) ? " -g $value" :
                    ""', python: '( "" , " -g " + str(value) )[ value is not None
                    and value != vdef]'}
            type: {_type: IntegerType, default: 12}
        -   _type: InputProgramParameter
            prompt: Gap extension penalty (-e)
            name: ext
            format: {perl: '(defined $value and $value != $vdef) ? " -e $value" :
                    ""', python: '( "" , " -e " + str(value) )[ value is not None
                    and value != vdef]'}
            type: {_type: IntegerType, default: 2}
        -   _type: InputProgramParameter
            prompt: Comparison matrix (-m)
            name: matrix
            format: {perl: '(defined $value and $value ne $vdef) ? " -m $value" :
                    ""', python: '( "" , " -m" + str(value) )[ value is not None and
                    value != vdef]'}
            type:
                _type: StringType
                default: BLOSUM62.bla
                options:
                - {label: BLOSUM30, value: BLOSUM30.bla}
                - {label: BLOSUM45, value: BLOSUM45.bla}
                - {label: BLOSUM62, value: BLOSUM62.bla}
                - {label: BLOSUM80, value: BLOSUM80.bla}
                - {label: GONNET120, value: gon120.bla}
                - {label: GONNET160, value: gon160.bla}
                - {label: GONNET200, value: gon200.bla}
                - {label: GONNET250, value: gon250.bla}
                - {label: GONNET350, value: gon350.bla}
                - {label: Identity, value: idenity.bla}
    -   _type: InputParagraph
        prompt: Model Options
        name: gene_model_options
        children:
        -   _type: InputProgramParameter
            prompt: Type of match (-init)
            name: init
            format: {perl: '(defined $value and $value ne $vdef) ? " -init $value"
                    : ""', python: '( "" , " -init " + str(value) )[ value is not
                    None and value != vdef]'}
            type:
                _type: StringType
                default: default
                options:
                - {label: Default, value: default}
                - {label: Global, value: global}
                - {label: Local, value: local}
                - {label: Wing, value: wing}
                - {label: Endbias, value: endbias}
        -   _type: InputProgramParameter
            prompt: Substitution error rate (-subs)
            name: subs
            format: {perl: '(defined $value and $value != $vdef) ? " -subs $value"
                    : ""', python: '( "" , " -subs " + str(value) )[ value is not
                    None and value != vdef]'}
            type: {_type: FloatType, default: 1.0e-05}
        -   _type: InputProgramParameter
            prompt: Insertion/deletion error rate (-indel)
            name: indel
            format: {perl: '(defined $value and $value != $vdef) ? " -indel $value"
                    : ""', python: '( "" , " -indel " + str(value) )[ value is not
                    None and value != vdef]'}
            type: {_type: FloatType, default: 1.0e-05}
        -   _type: InputProgramParameter
            prompt: Random Model as synchronous or flat (-null)
            name: 'null'
            format: {perl: '(defined $value and $value ne $vdef) ? " -null $value"
                    : ""', python: '( "" , " -null " + str(value) )[ value is not
                    None and value != vdef]'}
            type:
                _type: StringType
                default: syn
                options:
                - {label: Synchronous, value: syn}
                - {label: Flat, value: flat}
        -   _type: InputProgramParameter
            prompt: Probability of matching a NNN codon (-alln)
            name: alln
            format: {perl: '(defined $value and $value != $vdef) ? " -alln $value"
                    : ""', python: '( "" , " -alln " + str(value) )[ value is not
                    None and value != vdef]'}
            type: {_type: FloatType, default: 1.0}
        -   _type: InputParagraph
            prompt: Genewise special option
            name: wise2_model_opt
            precond: {wise2: genewise}
            children:
            -   _type: InputProgramParameter
                prompt: Gene parameter file (-gene)
                name: gene
                format: {perl: '(defined $value and $value ne $vdef) ? " -gene $value"
                        : ""', python: '( "" , " -gene " + str(value) )[ value is
                        not None and value != vdef]'}
                type:
                    _type: StringType
                    default: human.gf
                    options:
                    - {label: Human, value: human.gf}
                    - {label: Pb, value: pb.gf}
                    - {label: Pombe, value: pombe.gf}
                    - {label: Worm, value: worm.gf}
            -   _type: InputProgramParameter
                prompt: Using codon bias or not (-cfreq)?
                name: cfreq
                format: {perl: '(defined $value and $value ne $vdef) ? " -cfreq $value"
                        : ""', python: '( "" , " -cfreq " + str(value) )[ value is
                        not None and value != vdef]'}
                type:
                    _type: StringType
                    default: flat
                    options:
                    - {label: Model, value: model}
                    - {label: Flat, value: flat}
            -   _type: InputProgramParameter
                prompt: Using splice model or GT/AG (-splice)?
                name: splice
                format: {perl: '(defined $value and $value ne $vdef) ? " -splice $value"
                        : ""', python: '( "" , " -splice " + str(value) )[ value is
                        not None and value != vdef]'}
                type:
                    _type: StringType
                    default: model
                    options:
                    - {label: Model, value: model}
                    - {label: Flat, value: flat}
            -   _type: InputProgramParameter
                prompt: Use tied model for introns (-intron)
                name: intron
                format: {perl: '(defined $value and $value ne $vdef) ? " -intron $value"
                        : ""', python: '( "" , " -intron " + str(value) )[ value is
                        not None and value != vdef]'}
                type:
                    _type: StringType
                    default: tied
                    options:
                    - {label: Model, value: model}
                    - {label: Tied, value: tied}
            -   _type: InputProgramParameter
                prompt: Protein insert model (-insert)
                name: insert
                format: {perl: '(defined $value and $value ne $vdef) ? " -insert $value"
                        : ""', python: '( "" , " -insert " + str(value) )[ value is
                        not None and value != vdef]'}
                type:
                    _type: StringType
                    default: flat
                    options:
                    - {label: Model, value: model}
                    - {label: Flat, value: flat}
    -   _type: InputParagraph
        prompt: Output Options
        name: output_options
        children:
        -   _type: InputProgramParameter
            prompt: Show pretty ascii output (-pretty)
            name: pretty
            format: {perl: '($value) ? " -pretty" : ""', python: '( "" , " -pretty"
                    )[ value ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Show parameters (-para)
            name: para
            format: {perl: '($value) ? " -para" : ""', python: '( "" , " -para" )[
                    value ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Show summary output (-sum)
            name: sum
            format: {perl: '($value) ? " -sum" : ""', python: '( "" , " -sum" )[ value
                    ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Show protein translation, splicing frameshifts (-pep)
            name: pep
            format: {perl: '($value) ? " -pep" : ""', python: '( "" , " -pep" )[ value
                    ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Show logical AlnBlock alignment (-alb)
            name: alb
            format: {perl: '($value) ? " -alb" : ""', python: '( "" , " -alb" )[ value
                    ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Show raw matrix alignment (-pal)
            name: pal
            format: {perl: '($value) ? " -pal" : ""', python: '( "" , " -pal" )[ value
                    ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Length of main block in pretty output (-block)
            name: block
            format: {perl: '(defined $value and $value != $vdef) ? " -block $value"
                    : ""', python: '( "" , " -block " + str(value) )[ value is not
                    None and value != vdef]'}
            type: {_type: IntegerType, default: 50}
        -   _type: InputProgramParameter
            prompt: Divide string for multiple outputs (-divide)
            name: divide
            format: {perl: '(defined $value) ? " -divide \"$value\"" : ""', python: '(
                    "" , " -divide " + str(value) )[ value is not None ]'}
            type: {_type: StringType}
        -   _type: InputParagraph
            prompt: Genewise special option
            name: wise2_out_opt
            precond: {wise2: genewise}
            children:
            -   _type: InputProgramParameter
                prompt: Mark genes with frameshifts as pseudogenes (-pseudo)
                name: pseudo
                format: {perl: '($value) ? " -pseudo" : ""', python: '( "" , " -pseudo"
                        )[ value ]'}
                type: {_type: BooleanType, default: false}
            -   _type: InputProgramParameter
                prompt: Show gene structure (-genes)
                name: genes
                format: {perl: '($value) ? " -genes" : ""', python: '( "" , " -genes"
                        )[ value ]'}
                type: {_type: BooleanType, default: false}
            -   _type: InputProgramParameter
                prompt: Show gene structure with supporting evidence (-genesf)
                name: genesf
                format: {perl: '($value) ? " -genesf" : ""', python: '( "" , " -genesf"
                        )[ value ]'}
                type: {_type: BooleanType, default: false}
            -   _type: InputProgramParameter
                prompt: Show EMBL feature format with CDS key (-embl)
                name: embl
                format: {perl: '($value) ? " -embl" : ""', python: '( "" , " -embl"
                        )[ value ]'}
                type: {_type: BooleanType, default: false}
            -   _type: InputProgramParameter
                prompt: Show EMBL feature format with misc_feature key for diana (-diana)
                name: diana
                format: {perl: '($value) ? " -diana" : ""', python: '( "" , " -diana"
                        )[ value ]'}
                type: {_type: BooleanType, default: false}
            -   _type: InputProgramParameter
                prompt: Show cDNA (-cdna)
                name: cdna
                format: {perl: '($value) ? " -cdna" : ""', python: '( "" , " -cdna"
                        )[ value ]'}
                type: {_type: BooleanType, default: false}
            -   _type: InputProgramParameter
                prompt: Show protein translation, breaking at frameshifts (-trans)
                name: trans
                format: {perl: '($value) ? " -trans" : ""', python: '( "" , " -trans"
                        )[ value ]'}
                type: {_type: BooleanType, default: false}
            -   _type: InputProgramParameter
                prompt: Ace file gene structure (-ace)
                name: ace
                format: {perl: '($value) ? " -ace" : ""', python: '( "" , " -ace"
                        )[ value ]'}
                type: {_type: BooleanType, default: false}
            -   _type: InputProgramParameter
                prompt: Gene Feature Format file (-gff)
                name: gff
                format: {perl: '($value) ? " -gff" : ""', python: '( "" , " -gff"
                        )[ value ]'}
                type: {_type: BooleanType, default: false}
            -   _type: InputProgramParameter
                prompt: Raw gene structure (-gener)
                name: gener
                format: {perl: '($value) ? " -gener" : ""', python: '( "" , " -gener"
                        )[ value ]'}
                type: {_type: BooleanType, default: false}
    -   _type: InputParagraph
        prompt: New gene model statistics for genewise
        name: New_gene_options
        precond: {wise2: genewise}
        children:
        -   _type: InputProgramParameter
            prompt: Maximum Bits value for a splice site (-splice_max_collar)
            name: splice_max_collar
            format: {perl: '(defined $value and $value != $vdef) ? " -splice_max_collar
                    $value" : ""', python: '( "" , " -splice_max_collar " + str(value)
                    )[ value is not None and value != vdef]'}
            type: {_type: FloatType, default: 5.0}
        -   _type: InputProgramParameter
            prompt: Minimum Bits value for a splice site (-splice_min_collar)
            name: splice_min_collar
            format: {perl: '(defined $value and $value != $vdef) ? " -splice_min_collar
                    $value" : ""', python: '( "" , " -splice_min_collar " + str(value)
                    )[ value is not None and value != vdef]'}
            type: {_type: FloatType, default: -5.0}
        -   _type: InputProgramParameter
            prompt: Score offset for splice sites (-splice_score_offset)
            name: splice_score_offset
            format: {perl: '(defined $value and $value != $vdef) ? " -splice_score_offset
                    $value" : ""', python: '( "" , " -splice_score_offset " + str(value)
                    )[ value is not None and value != vdef]'}
            type: {_type: FloatType, default: 4.5}
    -   _type: InputParagraph
        prompt: Standard Options
        name: standard_options
        children:
        -   _type: InputProgramParameter
            prompt: No warning messages (-erroroffstd)
            name: erroroffstd
            format: {perl: '($value) ? " -erroroffstd" : ""', python: '( "" , " -erroroffstd"
                    )[ value ]'}
            type: {_type: BooleanType, default: false}
outputs: {_type: OutputParagraph}
operations: ['EDAM_operation:0352']
topics: ['EDAM_topic:0182']
homepage_links: ['http://www.ebi.ac.uk/Tools/Wise2/doc_wise2.html']
public_name: wise2
command: {path: null, value: null}
source_links: ['ftp://ftp.ebi.ac.uk/pub/software/unix/wise2/']
