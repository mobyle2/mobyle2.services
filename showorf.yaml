_type: Program
name: showorf
title: showorf
description: Display a nucleotide sequence and translation in pretty format
inputs:
    _type: InputParagraph
    children:
    -   _type: InputParagraph
        prompt: Input section
        name: e_input
        children:
        -   _type: InputProgramParameter
            prompt: sequence option
            name: e_sequence
            simple: true
            argpos: '1'
            format: {python: '("", " -sequence=" + str(value))[value is not None]'}
            mandatory: true
            type:
                _type: FormattedType
                format_terms: ['EDAM_format:1927', 'EDAM_format:2200', 'EDAM_format:1935',
                    'EDAM_format:1936', 'EDAM_format:1948', 'EDAM_format:1948', 'EDAM_format:1957',
                    'EDAM_format:2188', 'EDAM_format:2305']
                data_terms: EDAM_data:2977
    -   _type: InputParagraph
        prompt: Required section
        name: e_required
        children:
        -   _type: InputProgramParameter
            comment: '"0: None, 1: F1,2: F2,3: F3,4: R1,5: R2,6: R3"'
            prompt: Select frames to translate (value from 0 to 6)
            name: e_frames
            simple: true
            argpos: '2'
            format: {python: '("", " -frames=" + str(value))[value is not None and
                    value!=vdef]'}
            mandatory: true
            type: {_type: StringType, default: '1,2,3,4,5,6'}
    -   _type: InputParagraph
        prompt: Additional section
        name: e_additional
        children:
        -   _type: InputProgramParameter
            prompt: Genetic codes
            name: e_table
            argpos: '3'
            format: {python: '("", " -table=" + str(value))[value is not None and
                    value!=vdef]'}
            type:
                _type: StringType
                default: '0'
                options:
                - {label: Standard, value: '0'}
                - {label: Standard (with alternative initiation codons), value: '1'}
                - {label: Vertebrate mitochondrial, value: '2'}
                - {label: Yeast mitochondrial, value: '3'}
                - {label: 'Mold, protozoan, coelenterate mitochondrial and  mycoplasma/spiroplasma',
                    value: '4'}
                - {label: Invertebrate mitochondrial, value: '5'}
                - {label: Ciliate  macronuclear and dasycladacean, value: '6'}
                - {label: Echinoderm mitochondrial, value: '9'}
                - {label: Euplotid nuclear, value: '10'}
                - {label: Bacterial, value: '11'}
                - {label: Alternative yeast nuclear, value: '12'}
                - {label: Ascidian mitochondrial, value: '13'}
                - {label: Flatworm mitochondrial, value: '14'}
                - {label: Blepharisma macronuclear, value: '15'}
                - {label: Chlorophycean mitochondrial, value: '16'}
                - {label: Trematode mitochondrial, value: '21'}
                - {label: Scenedesmus obliquus, value: '22'}
                - {label: Thraustochytrium mitochondrial, value: '23'}
    -   _type: InputParagraph
        prompt: Output section
        name: e_output
        children:
        -   _type: InputProgramParameter
            prompt: Name of the output file (e_outfile)
            name: e_outfile
            argpos: '4'
            format: {python: '("" , " -outfile=" + str(value))[value is not None]'}
            type: {_type: StringType, default: showorf.e_outfile}
        -   _type: InputProgramParameter
            prompt: Add a ruler
            name: e_ruler
            argpos: '5'
            format: {python: '(" -noruler", "")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Number translations
            name: e_plabel
            argpos: '6'
            format: {python: '(" -noplabel", "")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Number dna sequence
            name: e_nlabel
            argpos: '7'
            format: {python: '(" -nonlabel", "")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Width of screen (value greater than or equal to 10)
            name: e_width
            ctrl:
            -   message: Value greater than or equal to 10 is required
                test:
                    value: {'#gte': '10'}
            argpos: '8'
            format: {python: '("", " -width=" + str(value))[value is not None and
                    value!=vdef]'}
            type: {_type: IntegerType, default: 50}
    -   _type: InputProgramParameter
        prompt: Turn off any prompting
        name: auto
        argpos: '9'
        format: {python: '" -auto -stdout"'}
        hidden: true
        type: {_type: StringType}
outputs:
    _type: OutputParagraph
    children:
    -   _type: OutputParagraph
        prompt: Output section
        name: e_output
        children:
        -   _type: OutputProgramParameter
            prompt: outfile_out option
            name: e_outfile_out
            filenames: {python: e_outfile}
operations: ['EDAM_operation:0371', 'EDAM_operation:0564', 'EDAM_operation:0436']
topics: ['EDAM_topic:0108']
documentation_links: ['http://bioweb2.pasteur.fr/docs/EMBOSS/showorf.html', 'http://emboss.sourceforge.net/docs/themes']
public_name: showorf
command: {path: null, value: showorf}
