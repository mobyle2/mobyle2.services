_type: Program
name: restover
title: restover
description: Find restriction enzymes producing a specific overhang
inputs:
    _type: InputParagraph
    children:
    -   _type: InputParagraph
        prompt: Input section
        name: e_input
        children:
        -   _type: InputProgramParameter
            prompt: sequence option
            name: e_sequence
            simple: true
            argpos: '1'
            format: {python: '("", " -sequence=" + str(value))[value is not None]'}
            mandatory: true
            type:
                _type: FormattedType
                format_terms: ['EDAM_format:1927', 'EDAM_format:2200', 'EDAM_format:1935',
                    'EDAM_format:1936', 'EDAM_format:1948', 'EDAM_format:1948', 'EDAM_format:1957',
                    'EDAM_format:2188', 'EDAM_format:2305']
                data_terms: EDAM_data:2977
        -   _type: InputProgramParameter
            prompt: Restriction enzyme data file (optional)
            name: e_datafile
            argpos: '2'
            format: {python: '("", " -datafile=" + str(value))[value is not None]'}
        -   _type: InputProgramParameter
            prompt: Restriction enzyme methylation data file
            name: e_mfile
            argpos: '3'
            format: {python: '("", " -mfile=" + str(value))[value is not None ]'}
    -   _type: InputParagraph
        prompt: Required section
        name: e_required
        children:
        -   _type: InputProgramParameter
            prompt: Overlap sequence
            name: e_seqcomp
            simple: true
            argpos: '4'
            format: {python: '("", " -seqcomp=" + str(value))[value is not None]'}
            mandatory: true
            type: {_type: StringType}
    -   _type: InputParagraph
        prompt: Advanced section
        name: e_advanced
        children:
        -   _type: InputProgramParameter
            prompt: Minimum cuts per re (value from 1 to 1000)
            name: e_min
            ctrl:
            -   message: Value greater than or equal to 1 is required
                test:
                    value: {'#gte': '1'}
            -   message: Value less than or equal to 1000 is required
                test:
                    value: {'#lte': '1000'}
            argpos: '5'
            format: {python: '("", " -min=" + str(value))[value is not None and value!=vdef]'}
            type: {_type: IntegerType, default: 1}
        -   _type: InputProgramParameter
            prompt: Maximum cuts per re
            name: e_max
            argpos: '6'
            format: {python: '("", " -max=" + str(value))[value is not None and value!=vdef]'}
            type: {_type: IntegerType, default: 2000000000}
        -   _type: InputProgramParameter
            prompt: Force single site only cuts
            name: e_single
            argpos: '7'
            format: {python: '("", " -single")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Use 3' overhang e.g. bamhi has ctag as a 5' overhang, and apai
                has ccgg as 3' overhang.
            name: e_threeprime
            argpos: '8'
            format: {python: '("", " -threeprime")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Allow blunt end cutters
            name: e_blunt
            argpos: '9'
            format: {python: '(" -noblunt", "")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Allow sticky end cutters
            name: e_sticky
            argpos: '10'
            format: {python: '(" -nosticky", "")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Allow ambiguous matches
            name: e_ambiguity
            argpos: '11'
            format: {python: '(" -noambiguity", "")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Allow circular dna
            name: e_plasmid
            argpos: '12'
            format: {python: '("", " -plasmid")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            comment: If this is set then RE recognition sites will not match methylated
                bases.
            prompt: Use methylation data
            name: e_methylation
            argpos: '13'
            format: {python: '("", " -methylation")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Only enzymes with suppliers
            name: e_commercial
            argpos: '14'
            format: {python: '(" -nocommercial", "")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
    -   _type: InputParagraph
        prompt: Output section
        name: e_output
        children:
        -   _type: InputProgramParameter
            prompt: Create html output
            name: e_html
            argpos: '15'
            format: {python: '("", " -html")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Limits reports to one isoschizomer
            name: e_limit
            argpos: '16'
            format: {python: '(" -nolimit", "")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Sort output alphabetically
            name: e_alphabetic
            argpos: '17'
            format: {python: '("", " -alphabetic")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Show fragment lengths
            name: e_fragments
            argpos: '18'
            format: {python: '("", " -fragments")[ bool(value) ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Name of the output file (e_outfile)
            name: e_outfile
            argpos: '19'
            format: {python: '("" , " -outfile=" + str(value))[value is not None]'}
            type: {_type: StringType, default: restover.e_outfile}
    -   _type: InputProgramParameter
        prompt: Turn off any prompting
        name: auto
        argpos: '20'
        format: {python: '" -auto -stdout"'}
        hidden: true
        type: {_type: StringType}
outputs:
    _type: OutputParagraph
    children:
    -   _type: OutputParagraph
        prompt: Output section
        name: e_output
        children:
        -   _type: OutputProgramParameter
            prompt: outfile_out option
            name: e_outfile_out
            filenames: {python: e_outfile}
operations: ['EDAM_operation:0431']
topics: ['EDAM_topic:0100']
documentation_links: ['http://bioweb2.pasteur.fr/docs/EMBOSS/restover.html', 'http://emboss.sourceforge.net/docs/themes']
public_name: restover
command: {path: null, value: restover}
