_type: Program
name: drawgram
title: drawgram
description: Plots a cladogram- or phenogram-like rooted tree
inputs:
    _type: InputParagraph
    children:
    -   _type: InputProgramParameter
        name: drawgram
        argpos: '0'
        format: {perl: '"drawgram <drawgram.params"', python: '"drawgram <drawgram.params"'}
        command: true
        hidden: true
        type: {_type: StringType}
    -   _type: InputProgramParameter
        comment: Tree in Newick format.
        prompt: Tree File (intree)
        name: treefile
        simple: true
        argpos: '-10'
        format: {perl: '"ln -s $treefile intree && "', python: '"ln -s "+ str( treefile
                ) +" intree && "'}
        mandatory: true
        type:
            _type: FormattedType
            format_terms: ['EDAM_format:1910']
            data_terms: EDAM_data:0872
    -   _type: InputProgramParameter
        name: screen_type
        argpos: '-1'
        format: {perl: '"0\\n"', python: '"0\n"'}
        hidden: true
        type: {_type: StringType}
        paramfile: drawgram.params
    -   _type: InputParagraph
        prompt: Drawgram options
        name: options
        children:
        -   _type: InputProgramParameter
            prompt: Which plotter or printer will the tree be drawn on (P)
            name: plotter
            argpos: '2'
            format: {perl: '(defined $value and $value ne $vdef) ? "P\\n$value\\n"
                    : ""', python: '("" , "P\n" + str(value) +"\n")[ value is not
                    None and value != vdef ]'}
            type:
                _type: StringType
                default: L
                options:
                - {label: Postscript printer file format (L), value: L}
                - {label: PICT format (M), value: M}
                - {label: HP Laserjet PCL file format (J), value: J}
                - {label: MS-Windows Bitmap (W), value: W}
                - {label: TeKtronix 4010 graphics terminal (K), value: K}
                - {label: Hewlett-Packard pen plotter (H), value: H}
                - {label: DEC ReGIS graphics (D), value: D}
                - {label: Houston Instruments plotter (B), value: B}
                - {label: Epson MX-80 dot-matrix printer (E), value: E}
                - {label: Prowriter/Imagewriter dot-matrix printer (C), value: C}
                - {label: Okidata dot-matrix printer (O), value: O}
                - {label: Toshiba 24-pin dot-matrix printer (T), value: T}
                - {label: PCX file format (P), value: P}
                - {label: X Bitmap format (X), value: X}
                - {label: FIG 2.0 format (F), value: F}
                - {label: Idraw drawing program format (A), value: A}
                - {label: VRML Virtual Reality Markup Language file (Z), value: Z}
                - {label: POVRAY 3D rendering program file (V), value: V}
                - {label: Rayshade 3D rendering program file (R), value: R}
            paramfile: drawgram.params
        -   _type: InputParagraph
            prompt: Bitmap options
            name: xbitmap_options
            precond:
                plotter:
                    '#in': [X, W]
            children:
            -   _type: InputProgramParameter
                prompt: X resolution (in pixels)
                name: xres
                argpos: '3'
                format: {perl: '"$value\\n"', python: str( value ) + "\n"}
                mandatory: true
                type: {_type: IntegerType, default: 500}
                paramfile: drawgram.params
            -   _type: InputProgramParameter
                prompt: Y resolution (in pixels)
                name: yres
                argpos: '4'
                format: {perl: '"$value\\n"', python: str( value ) + "\n"}
                mandatory: true
                type: {_type: IntegerType, default: 500}
                paramfile: drawgram.params
        -   _type: InputParagraph
            prompt: Laserjet options
            name: laserjet_options
            precond: {plotter: J}
            children:
            -   _type: InputProgramParameter
                prompt: Laserjet resolution
                name: laserjet_resolution
                argpos: '3'
                format: {perl: '"$value\\n"', python: str(value) +"\n"}
                mandatory: true
                type:
                    _type: StringType
                    default: '3'
                    options:
                    - {label: 75 DPI (1), value: '1'}
                    - {label: 150 DPI (2), value: '2'}
                    - {label: 300 DPI (3), value: '3'}
                paramfile: drawgram.params
        -   _type: InputParagraph
            prompt: Paintbrush options
            name: pcx_options
            precond: {plotter: P}
            children:
            -   _type: InputProgramParameter
                prompt: Paintbrush PCX resolution
                name: pcx_resolution
                argpos: '3'
                format: {perl: '"$value\\n"', python: str(value) + "\n"}
                mandatory: true
                type:
                    _type: StringType
                    default: '3'
                    options:
                    - {label: EGA 640 X 350 (1), value: '1'}
                    - {label: VGA 800 X 600 (2), value: '2'}
                    - {label: VGA 1024 X 768 (3), value: '3'}
                paramfile: drawgram.params
        -   _type: InputParagraph
            prompt: PostScript options
            name: ps_options
            precond: {plotter: L}
            children:
            -   _type: InputProgramParameter
                prompt: Font (F)
                name: font
                argpos: '5'
                format: {perl: '(defined $value and $value ne $vdef) ? "F\\n$value\\n"
                        : ""', python: '("", "F\n"+str(value)+"\n")[value is not None
                        and value != vdef]'}
                type:
                    _type: StringType
                    default: Times-Roman
                    options:
                    - {label: Courier, value: Courier}
                    - {label: Helvetica, value: Helvetica}
                    - {label: Helvetica-Bold, value: Helvetica-Bold}
                    - {label: Helvetica-BoldOblique, value: Helvetica-BoldOblique}
                    - {label: Helvetica-Oblique, value: Helvetica-Oblique}
                    - {label: Hershey, value: Hershey}
                    - {label: Times, value: Times}
                    - {label: Times-Bold, value: Times-Bold}
                    - {label: Times-BoldItalic, value: Times-BoldItalic}
                    - {label: Times-Italic, value: Times-Italic}
                    - {label: Times-Roman, value: Times-Roman}
                paramfile: drawgram.params
        -   _type: InputParagraph
            prompt: POVRAY options
            name: pov_options
            precond: {plotter: V}
            children:
            -   _type: InputProgramParameter
                name: pov_validate
                argpos: '2000'
                format: {perl: '"Y\\n"', python: '"Y\n"'}
                hidden: true
                type: {_type: StringType}
                paramfile: drawgram.params
        -   _type: InputParagraph
            prompt: VRML options
            name: vrml_options
            precond: {plotter: Z}
            children:
            -   _type: InputProgramParameter
                name: vrml_validate
                argpos: '2000'
                format: {perl: '"Y\\n"', python: '"Y\n"'}
                hidden: true
                type: {_type: StringType}
                paramfile: drawgram.params
        -   _type: InputParagraph
            prompt: Rayshade options
            name: ray_options
            precond: {plotter: R}
            children:
            -   _type: InputProgramParameter
                name: ray_validate
                argpos: '2000'
                format: {perl: '"Y\\n"', python: '"Y\n"'}
                hidden: true
                type: {_type: StringType}
                paramfile: drawgram.params
        -   _type: InputProgramParameter
            name: screen
            argpos: '1'
            format: {perl: '"V\\nN\\n"', python: '"V\nN\n"'}
            hidden: true
            type: {_type: StringType}
            paramfile: drawgram.params
        -   _type: InputProgramParameter
            prompt: Tree grows... (H)
            name: grows
            argpos: '5'
            format: {perl: '(defined $value and $value ne $vdef) ? "H\\n" : ""', python: '(
                    "" , "H\n" )[ value is not None and value != vdef ]'}
            type:
                _type: StringType
                default: Horizontally
                options:
                - {label: Vertically, value: Vertically}
                - {label: Horizontally, value: Horizontally}
            paramfile: drawgram.params
        -   _type: InputProgramParameter
            prompt: Tree style (S)
            name: tree_style
            argpos: '5'
            type: {_type: StringType, default: C}
            paramfile: drawgram.params
        -   _type: InputProgramParameter
            prompt: Use branch lengths (B)
            name: branch_lengths
            argpos: '5'
            format: {perl: '($value) ? "" : "B\\n"', python: '("B\n" , "")[ value
                    ]'}
            type: {_type: BooleanType, default: false}
            paramfile: drawgram.params
        -   _type: InputProgramParameter
            prompt: Horizontal margins (M)
            name: horizontal_margins
            argpos: '10'
            format: {perl: '(defined $value and $value != $vdef) ? "M\\n$value\\n$vertical_margins\\n"
                    : ""', python: '("" , "M\n" + str( value ) + "\n" + str( vertical_margins
                    ) + "\n")[ value is not None and value != vdef ]'}
            type: {_type: FloatType, default: 1.65}
            paramfile: drawgram.params
        -   _type: InputProgramParameter
            prompt: Vertical margins
            name: vertical_margins
            argpos: '9'
            format: {perl: '""', python: '""'}
            type: {_type: FloatType, default: 2.16}
            paramfile: drawgram.params
        -   _type: InputProgramParameter
            comment: 'Default value: Automatically rescaled'
            prompt: Scale of branch length (R)
            name: scale
            argpos: '5'
            format: {perl: '(defined $value) ? "R\\n$value\\n" : ""', python: '(""
                    , "R\n" +str( value ) +"\n")[ value is not None ]'}
            type: {_type: FloatType}
            paramfile: drawgram.params
        -   _type: InputProgramParameter
            prompt: Depth/Breadth of tree (D)
            name: depth
            argpos: '5'
            format: {perl: '(defined $value and $value != $vdef) ? "D\\n$value\\n"
                    : ""', python: '( "" , "D\n" + str( value ) + "\n" )[ value is
                    not None and value != vdef ]'}
            type: {_type: FloatType, default: 1.0}
            paramfile: drawgram.params
        -   _type: InputProgramParameter
            comment: Enter the stem length as fraction of tree depth (a value between
                0.0 and 1.0).
            prompt: Stem-length/tree-depth (T)
            name: stem
            argpos: '5'
            format: {perl: '(defined $value and $value != $vdef) ? "T\\n$value\\n"
                    : ""', python: '("" , "T\n" + str( value ) + "\n")[ value is not
                    None and value != vdef ]'}
            type: {_type: FloatType, default: 0.05}
            paramfile: drawgram.params
        -   _type: InputProgramParameter
            comment: Enter character height as fraction of tip spacing.
            prompt: Character ht / tip space (C)
            name: character_height
            argpos: '5'
            format: {perl: '(defined $value and $value != $vdef) ? "C\\n$value\\n"
                    : ""', python: '("" , "C\n" + str( value ) +"\n")[ value is not
                    None and value != vdef ]'}
            type: {_type: FloatType, default: 0.3333}
            paramfile: drawgram.params
        -   _type: InputProgramParameter
            prompt: Ancestral nodes (A)
            name: ancestral
            argpos: '5'
            format: {perl: '(defined $value and $value ne $vdef) ? "A\\n$value\\n"
                    : ""', python: '("" , "A\n" + str( value )+ "\n")[ value is not
                    None and value != vdef ]'}
            type:
                _type: StringType
                default: I
                options:
                - {label: Intermediate (I), value: I}
                - {label: Weighted (W), value: W}
                - {label: Centered (C), value: C}
                - {label: Inner (N), value: N}
                - {label: So tree is V-shaped (V), value: V}
            paramfile: drawgram.params
    -   _type: InputProgramParameter
        name: confirm
        argpos: '1000'
        format: {perl: '"Y\\n"', python: '"Y\n"'}
        hidden: true
        type: {_type: StringType}
        paramfile: drawgram.params
outputs:
    _type: OutputParagraph
    children:
    -   _type: OutputProgramParameter
        prompt: Graphic tree file
        name: plotfile
        filenames: {perl: '"plotfile"', python: '"plotfile"'}
        precond:
            plotter:
                '#nin': [L, M, W, X]
    -   _type: OutputProgramParameter
        prompt: Graphic tree file ( postscript format )
        name: psfile
        filenames: {perl: plotfile.ps, python: '''plotfile.ps'''}
        precond: {plotter: L}
    -   _type: OutputProgramParameter
        prompt: Graphic tree file ( pict format )
        name: pictfile
        filenames: {perl: plotfile.pict, python: '''plotfile.pict'''}
        precond: {plotter: M}
    -   _type: OutputProgramParameter
        prompt: Graphic tree file ( xbm format )
        name: xbmfile
        filenames: {perl: plotfile.xbm, python: '''plotfile.xbm'''}
        precond: {plotter: X}
    -   _type: OutputProgramParameter
        prompt: Graphic tree file ( bmp format )
        name: bmpfile
        filenames: {perl: plotfile.bmp, python: '''plotfile.bmp'''}
        precond: {plotter: W}
comment: "DRAWGRAM  interactively   plots  a  cladogram-  or\n\t  phenogram-like rooted\
    \  tree diagram, with  many options including\n\t  orientation of tree and branches,\
    \  style of tree, label sizes and\n\t  angles, tree depth, margin  sizes, stem\
    \ lengths, and placement of\n\t  nodes in the  tree. Particularly if you can \
    \ use your computer to\n\t  preview the plot, you can  very effectively adjust\
    \ the details of\n\t  the plotting to get just the kind of plot you want."
operations: ['EDAM_operation:0567']
topics: ['EDAM_topics:0092', 'EDAM_topics:0084']
documentation_links: ['http://bioweb2.pasteur.fr/docs/phylip/doc/drawgram.html']
public_name: drawgram
command: {path: null, value: null}
