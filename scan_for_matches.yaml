!mobyle/program
name: scan_for_matches
title: scan_for_matches
description: Scan Nucleotide or Protein Sequences for Matching Patterns
inputs: !mobyle/inputparagraph
    children:
    - !mobyle/inputprogramparameter
        prompt: Input sequence
        format: '" < " + str(value)'
        simple: true
        argpos: 100
        mandatory: true
        name: sequence
        command: false
        type: !mobyle/formattedtype
            format_terms: ['EDAM_format:2200']
            data_terms: ['EDAM_data:2044']
    - !mobyle/inputprogramparameter {comment: 'Some examples of pattern:- Simple Patterns
            Built by Matching Ranges and Reverse Complements:p1=4...7 3...8 ~p1 (three
            "pattern units" with: 4...7 which "match 4 to 7 characters and call them
            p1", 3...8 which "match 3 to 8 characters" and  ~pi "match the reverse
            complement of p1" )- Defining Pairing Rules and Allowing Mismatches, Insertions,
            and Deletionsr1={au,ua,gc,cg,gu,ug,ga,ag}p1=2...3 0...4 p2=2...5 1...5
            r1~p2 0...4 ~p1 (p1=2...3     match 2 or 3 characters (call it p1), 0...4        match
            0 to 4 characters, p2=2...5     match 2 to 5 characters (call it p2),
            1...5        match 1 to 5 characters, r1~p2        match the reverse complement
            of p2 using rule r1, allowing G-A and A-G pairs, 0...4        match 0
            to 4 characters, ~p1          match the reverse complement of p1 allowing
            only G-C, C-G, A-T, and T-A pairs)- Mismatches and bulgesp1=10...10 3...8
            ~p1[1,2,1] (the third pattern unit must match 10 characters, allowing
            one "mismatch" (a pairing other than G-C, C-G, A-T, or T-A))-Searching
            for repeats:p1=6...6 3...8 p1   (find exact 6 character repeat separated
            by to 8 characters)p1=6...6 3..8 p1[1,0,0]   (allow one mismatch)p1=3...3
            p1[1,0,0] p1[1,0,0] p1[1,0,0] (match 12 characters that are the remains
            of a 3-character sequence occurring 4 times)p1=4...8 0...3 p2=6...8 p1
            0...3 p2 (This would match things like ATCT G TCTTT ATCT TG TCTTT)-Searching
            for particular sequences:p1=6...8 GAGA ~p1    (match a hairpin with GAGA
            as the loop)RRRRYYYY             (match 4 purines followed by 4 pyrimidines)TATAA[1,0,0]         (match
            TATAA, allowing 1 mismatch)', prompt: Pattern file, format: '" " + str(value)',
        simple: true, argpos: 99, mandatory: true, name: pat_file, command: false}
    - !mobyle/inputprogramparagraph
        prompt: Control options
        name: control_options
        argpos: 2
        children:
        - !mobyle/inputprogramparameter
            prompt: Search complementary strand (-c)
            format: ( "" , " -c" )[ value ]
            simple: true
            name: complementary_strand
            command: false
            type: !mobyle/booleantype {default: false}
        - !mobyle/inputprogramparameter
            prompt: Protein sequence? (-p)
            format: ( "" , " -p" )[ value ]
            simple: true
            name: protein
            command: false
            type: !mobyle/booleantype {default: false}
    - !mobyle/inputprogramparameter
        prompt: Outfile name
        format: '" > " + str(value)'
        simple: true
        argpos: 101
        name: outfile_name
        command: false
        type: !mobyle/stringtype {default: hits}
outputs: !mobyle/outputparagraph
    children:
    - !mobyle/outputprogramparameter {prompt: Output file, filenames: str(outfile_name),
        name: outfile}
    - !mobyle/outputprogramparameter
        prompt: Standard output
        filenames: '"scan_for_matches.out"'
        name: stdout
        output_type: stdout
        type: !mobyle/formattedtype
            data_terms: ['EDAM_data:2048']
    - !mobyle/outputprogramparameter
        prompt: Standard error
        filenames: '"scan_for_matches.err"'
        name: stderr
        type: !mobyle/formattedtype
            data_terms: ['EDAM_data:2048']
comment: Scan_for_matches is a utility to search for patterns in DNA and protein sequences.
operations: ['EDAM_operation:0414']
topics: ['EDAM_topic:0160']
documentation_links: ['http://bioweb2.pasteur.fr/docs/scan_for_matches/scan_for_matches.txt']
command: scan_for_matches
env: {}
source_links: ['ftp://ftp.mcs.anl.gov/pub/Genomics/PatScan/']
