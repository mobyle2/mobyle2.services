!mobyle/program
name: fuzzpro
title: fuzzpro
description: Search for patterns in protein sequences
inputs: !mobyle/inputparagraph
    children:
    - !mobyle/inputprogramparagraph
        prompt: Input section
        name: input
        children:
        - !mobyle/inputprogramparameter
            prompt: Sequence option
            format: ("", " -sequence=" + str(value))[value is not None]
            simple: true
            argpos: 1
            mandatory: true
            name: sequence
            command: false
            type: !mobyle/formattedtype
                format_terms: ['EDAM_format:1927', 'EDAM_format:2200', 'EDAM_format:1935',
                    'EDAM_format:1936', 'EDAM_format:1948', 'EDAM_format:1948', 'EDAM_format:1957',
                    'EDAM_format:2188']
                data_terms: ['EDAM_data:2976']
        - !mobyle/inputprogramparameter {comment: "The standard IUPAC one-letter codes\
                \ for the amino acids are used. \n  The symbol 'x' is used for a position\
                \ where any amino acid is  accepted. \n  Ambiguities are indicated\
                \ by listing the acceptable amino acids  for a given position, between\
                \ square parentheses '[ ]'. For  example: [ALT] stands for Ala or\
                \ Leu or Thr. \n  Ambiguities are also indicated by listing between\
                \ a pair of curly  brackets '{ }' the amino acids that are not accepted\
                \ at a given  position. For example: {AM} stands for any amino acid\
                \ except Ala  and Met. \n  Each element in a pattern is separated\
                \ from its neighbor by a '-'.  (Optional in fuzzpro). \n  Repetition\
                \ of an element of the pattern can be indicated by  following that\
                \ element with a numerical value or a numerical range  between parenthesis.\
                \ Examples: x(3) corresponds to x-x-x, x(2,4)  corresponds to x-x\
                \ or x-x-x or x-x-x-x. \n  When a pattern is restricted to either\
                \ the N- or C-terminal of a  sequence, that pattern either starts\
                \ with a '<' symbol or  respectively ends with a '>' symbol. \n  A\
                \ period ends the pattern. (Optional in fuzzpro). \n  For example,\
                \ [DE](2)HS{P}X(2)PX(2,4)C", prompt: Search pattern, format: '("",
                " -pattern=@" + str(value))[value is not None]', simple: true, argpos: 2,
            mandatory: true, name: pattern, command: false}
        - !mobyle/inputprogramparameter
            prompt: Mismatch value for all patterns
            format: ("", " -pmismatch=" + str(value))[value is not None and value!=vdef]
            argpos: 3
            name: pmismatch
            command: false
            type: !mobyle/integertype {default: 0}
    - !mobyle/inputprogramparagraph
        prompt: Output section
        name: output
        children:
        - !mobyle/inputprogramparameter
            prompt: Name of the report file
            format: ("" , " -outfile=" + str(value))[value is not None]
            argpos: 4
            name: outfile
            command: false
            type: !mobyle/stringtype {default: fuzzpro.report}
        - !mobyle/inputprogramparameter
            prompt: Choose the report output format
            format: ("", " -rformat=" + str(value))[value is not None and value!=vdef]
            argpos: 5
            name: rformat_outfile
            command: false
            type: !mobyle/stringtype
                default: SEQTABLE
                options:
                - {label: Dasgff, value: DASGFF}
                - {label: Dbmotif, value: DBMOTIF}
                - {label: Diffseq, value: DIFFSEQ}
                - {label: Embl, value: EMBL}
                - {label: Excel, value: EXCEL}
                - {label: Feattable, value: FEATTABLE}
                - {label: Genbank, value: GENBANK}
                - {label: Gff, value: GFF}
                - {label: Listfile, value: LISTFILE}
                - {label: Motif, value: MOTIF}
                - {label: Nametable, value: NAMETABLE}
                - {label: Pir, value: PIR}
                - {label: Regions, value: REGIONS}
                - {label: Seqtable, value: SEQTABLE}
                - {label: Simple, value: SIMPLE}
                - {label: Srs, value: SRS}
                - {label: Swiss, value: SWISS}
                - {label: Table, value: TABLE}
                - {label: Tagseq, value: TAGSEQ}
    - !mobyle/inputprogramparameter
        prompt: Turn off any prompting
        format: '" -auto -stdout"'
        argpos: 6
        name: auto
        command: false
        hidden: true
        type: !mobyle/stringtype {}
outputs: !mobyle/outputparagraph
    children:
    - !mobyle/outputprogramparagraph
        prompt: Output section
        name: output
        children:
        - !mobyle/outputprogramparameter
            prompt: Outfile_out option
            filenames: outfile
            name: outfile_out
            precond:
                rformat_outfile:
                    '#in': [DASGFF, DBMOTIF, DIFFSEQ, EMBL, EXCEL, FEATTABLE, GENBANK,
                        GFF, LISTFILE, MOTIF, NAMETABLE, PIR, REGIONS, SEQTABLE, SIMPLE,
                        SRS, SWISS, TABLE, TAGSEQ]
    - !mobyle/outputprogramparameter
        prompt: Standard output
        filenames: '"fuzzpro.out"'
        name: stdout
        output_type: stdout
        type: !mobyle/formattedtype
            data_terms: ['EDAM_data:2048']
    - !mobyle/outputprogramparameter
        prompt: Standard error
        filenames: '"fuzzpro.err"'
        name: stderr
        type: !mobyle/formattedtype
            data_terms: ['EDAM_data:2048']
operations: ['EDAM_operation:0382', 'EDAM_operation:0347']
topics: ['EDAM_topic:0161']
documentation_links: ['http://bioweb2.pasteur.fr/docs/EMBOSS/fuzzpro.html', 'http://emboss.sourceforge.net/docs/themes']
command: fuzzpro
env: {}
