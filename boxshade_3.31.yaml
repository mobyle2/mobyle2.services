_type: Program
name: boxshade
version: '3.31'
title: BOXSHADE
description: printouts from multiple-aligned protein or DNA sequences
authors: Hofmann, Baron
inputs:
    _type: InputParagraph
    children:
    -   _type: InputProgramParameter
        name: boxshade
        argpos: '0'
        format: {perl: '"boxshade <boxshade.params"', python: '"boxshade <boxshade.params"'}
        command: true
        hidden: true
        type: {_type: StringType}
    -   _type: InputProgramParameter
        prompt: Alignment File
        name: alignment
        simple: true
        argpos: '1'
        format: {perl: '"$value\\n"', python: str(value) + "\n"}
        mandatory: true
        type:
            _type: FormattedType
            format_terms: ['EDAM_format:1982']
            data_terms: EDAM_data:0863
        paramfile: boxshade.params
    -   _type: InputProgramParameter
        name: input_format
        argpos: '2'
        format: {perl: '"2\\n"', python: '"2\n"'}
        hidden: true
        type: {_type: StringType}
        paramfile: boxshade.params
    -   _type: InputParagraph
        prompt: Output parameters
        name: output_params
        children:
        -   _type: InputProgramParameter
            prompt: Output format
            name: output_format
            argpos: '3'
            format: {perl: '"$value\\n"', python: str(value) + "\n"}
            mandatory: true
            type:
                _type: StringType
                default: e
                options:
                - {label: POSTSCRIPT (1), value: '1'}
                - {label: Encapsulated POSTSCRIPT (2), value: '2'}
                - {label: HPGL (3), value: '3'}
                - {label: RTF (Rich Text Format) (4), value: '4'}
                - {label: ANSI-screen (PC-version) (6), value: '6'}
                - {label: VT100-screen (DEC-version) (7), value: '7'}
                - {label: ReGIS-screen (25 lines each) (8), value: '8'}
                - {label: ReGIS-file (without breaks) (9), value: '9'}
                - {label: LJ250-printer file (a), value: a}
                - {label: FIG file (for XFIG) (c), value: c}
                - {label: PICT file (d), value: d}
                - {label: HTML (e), value: e}
            paramfile: boxshade.params
        -   _type: InputProgramParameter
            prompt: Should sequence name be printed
            name: print_name
            argpos: '13'
            format: {perl: '($value) ? "y\\n" : "n\\n"', python: '( "n\n" , "y\n"
                    )[ value ]'}
            type: {_type: BooleanType, default: false}
            paramfile: boxshade.params
        -   _type: InputProgramParameter
            prompt: Display ruler line
            name: ruler
            argpos: '6'
            format: {perl: '($value) ? "y\\n" : "n\\n"', python: '( "n\n" , "y\n"
                    )[ value ]'}
            type: {_type: BooleanType, default: false}
            paramfile: boxshade.params
        -   _type: InputProgramParameter
            prompt: Should position numbers be printed?
            name: print_position
            argpos: '14'
            format: {perl: '($value) ? "y\\n" : "n\\n"', python: '( "n\n" , "y\n"
                    )[ value ]'}
            precond: {'#not': ruler}
            hidden: true
            type: {_type: BooleanType, default: false}
            paramfile: boxshade.params
        -   _type: InputProgramParameter
            prompt: How many sequence characters per line
            name: sequence_characters
            argpos: '12'
            format: {perl: '"$value\\n"', python: str( value ) + "\n"}
            type: {_type: IntegerType, default: 60}
            paramfile: boxshade.params
        -   _type: InputProgramParameter
            prompt: How many lines between two sequence blocks
            name: lines
            argpos: '17'
            format: {perl: '"$value\\n"', python: str(value) + "\n"}
            type: {_type: IntegerType, default: 1}
            paramfile: boxshade.params
        -   _type: InputProgramParameter
            prompt: Character size in Points (except for HTML and ASCII output formats)
            name: character_size
            argpos: '28'
            format: {perl: '"$value\\n"', python: str(value) + "\n"}
            precond:
                output_format:
                    '#nin': ['8', '9', b, e]
            type: {_type: IntegerType, default: 10}
            paramfile: boxshade.params
        -   _type: InputProgramParameter
            prompt: Save Shading/Text
            name: save_shading
            argpos: '29'
            format: {perl: '"$value\\n"', python: str(value) + "\n"}
            precond: {output_format: d}
            mandatory: true
            type:
                _type: StringType
                default: T
                options:
                - {label: Save shading (S), value: S}
                - {label: Save Shading+Text (T), value: T}
            paramfile: boxshade.params
        -   _type: InputProgramParameter
            prompt: Rotate plot
            name: rotate
            argpos: '31'
            format: {perl: '($value) ? "y\\n" : "n\\n"', python: '( "n\n" , "y\n"
                    )[ value ]'}
            precond:
                '#or':
                - {output_format: '1'}
                - {output_format: '3'}
                - {output_format: d}
            type: {_type: BooleanType, default: false}
            paramfile: boxshade.params
    -   _type: InputParagraph
        prompt: Sequence properties
        name: sequence_params
        children:
        -   _type: InputProgramParameter
            prompt: Special label for similar residues
            name: label_similar
            argpos: '18'
            format: {perl: '($value) ? "y\\n" : "n\\n"', python: '( "n\n" , "y\n"
                    )[ value ]'}
            type: {_type: BooleanType, default: false}
            paramfile: boxshade.params
        -   _type: InputProgramParameter
            prompt: Special label for identical residues in all sequences
            name: label_identical
            argpos: '19'
            format: {perl: '($value) ? "y\\n" : "n\\n"', python: '( "n\n" , "y\n"
                    )[ value ]'}
            type: {_type: BooleanType, default: false}
            paramfile: boxshade.params
        -   _type: InputProgramParameter
            prompt: Display consensus line
            name: consensus
            argpos: '5'
            format: {perl: '($value) ? "y\\n .*\\n" : "n\\n"', python: '( "n\n" ,
                    "y\n .*\n" )[ value ]'}
            type: {_type: BooleanType, default: false}
            paramfile: boxshade.params
        -   _type: InputProgramParameter
            comment: The threshold is the fraction of residues that must be identical
                or similar for shading to occur.
            prompt: Identity threshold
            name: threshold
            argpos: '10'
            format: {perl: '"$value\\n"', python: str(value) + "\n"}
            precond:
                output_format: {'#ne': b}
            type: {_type: FloatType, default: 0.5}
            paramfile: boxshade.params
        -   _type: InputParagraph
            prompt: Letters foreground and background colors
            name: letters
            children:
            -   _type: InputProgramParameter
                prompt: Background for different residues
                name: different_background
                argpos: '20'
                format: {perl: '"$value\\n"', python: str(value) + "\n"}
                precond:
                    output_format: {'#ne': b}
                mandatory: true
                type:
                    _type: StringType
                    default: W
                    options:
                    - {label: Black (B), value: B}
                    - {label: White (W), value: W}
                    - {label: 'Gray value: 1', value: '1'}
                    - {label: 'Gray value: 2', value: '2'}
                    - {label: 'Gray value: 3', value: '3'}
                    - {label: 'Gray value: 4 (darkest)', value: '4'}
                    - {label: Red (R), value: R}
                    - {label: Green (G), value: G}
                    - {label: Blue (L), value: L}
                    - {label: Yellow (Y), value: Y}
                    - {label: Magenta (M), value: M}
                    - {label: Cyan (C), value: C}
                paramfile: boxshade.params
            -   _type: InputProgramParameter
                prompt: Foreground for different residues (lowercase choices mean
                    lowercase letters in the sequence)
                name: different_foreground
                argpos: '21'
                format: {perl: '"$value\\n"', python: str(value) + "\n"}
                mandatory: true
                type:
                    _type: StringType
                    default: B
                    options:
                    - {label: Black (B), value: B}
                    - {label: Black (b), value: b}
                    - {label: White (W), value: W}
                    - {label: White (w), value: w}
                    - {label: 'Gray value: 1', value: '1'}
                    - {label: 'Gray value: 2', value: '2'}
                    - {label: 'Gray value: 3', value: '3'}
                    - {label: 'Gray value: 4 = darkest', value: '4'}
                    - {label: 'Gray value: 5 (lowercase)', value: '5'}
                    - {label: 'Gray value: 6 (lowercase)', value: '6'}
                    - {label: 'Gray value: 7 (lowercase)', value: '7'}
                    - {label: 'Gray value: 8 = darkest (lowercase)', value: '8'}
                    - {label: Red (R), value: R}
                    - {label: Red (r), value: r}
                    - {label: Green (G), value: G}
                    - {label: Green (g), value: g}
                    - {label: Blue (L), value: L}
                    - {label: Blue (l), value: l}
                    - {label: Yellow (Y), value: Y}
                    - {label: Yellow (y), value: y}
                    - {label: Magenta (M), value: M}
                    - {label: Magenta (m), value: m}
                    - {label: Cyan (C), value: C}
                    - {label: Cyan (c), value: c}
                paramfile: boxshade.params
            -   _type: InputProgramParameter
                prompt: Background for identical residues
                name: identical_background
                argpos: '22'
                format: {perl: '"$value\\n"', python: str(value) + "\n"}
                precond:
                    output_format: {'#ne': b}
                mandatory: true
                type:
                    _type: StringType
                    default: B
                    options:
                    - {label: Black (B), value: B}
                    - {label: White (W), value: W}
                    - {label: 'Gray value: 1', value: '1'}
                    - {label: 'Gray value: 2', value: '2'}
                    - {label: 'Gray value: 3', value: '3'}
                    - {label: 'Gray value: 4 (darkest)', value: '4'}
                    - {label: Red (R), value: R}
                    - {label: Green (G), value: G}
                    - {label: Blue (L), value: L}
                    - {label: Yellow (Y), value: Y}
                    - {label: Magenta (M), value: M}
                    - {label: Cyan (C), value: C}
                paramfile: boxshade.params
            -   _type: InputProgramParameter
                prompt: Foreground for identical residues (lowercase choices mean
                    lowercase letters in the sequence)
                name: identical_foreground
                argpos: '23'
                format: {perl: '"$value\\n"', python: str(value) + "\n"}
                mandatory: true
                type:
                    _type: StringType
                    default: W
                    options:
                    - {label: Black (B), value: B}
                    - {label: Black (b), value: b}
                    - {label: White (W), value: W}
                    - {label: White (w), value: w}
                    - {label: 'Gray value: 1', value: '1'}
                    - {label: 'Gray value: 2', value: '2'}
                    - {label: 'Gray value: 3', value: '3'}
                    - {label: 'Gray value: 4 = darkest', value: '4'}
                    - {label: 'Gray value: 5 (lowercase)', value: '5'}
                    - {label: 'Gray value: 6 (lowercase)', value: '6'}
                    - {label: 'Gray value: 7 (lowercase)', value: '7'}
                    - {label: 'Gray value: 8 = darkest (lowercase)', value: '8'}
                    - {label: Red (R), value: R}
                    - {label: Red (r), value: r}
                    - {label: Green (G), value: G}
                    - {label: Green (g), value: g}
                    - {label: Blue (L), value: L}
                    - {label: Blue (l), value: l}
                    - {label: Yellow (Y), value: Y}
                    - {label: Yellow (y), value: y}
                    - {label: Magenta (M), value: M}
                    - {label: Magenta (m), value: m}
                    - {label: Cyan (C), value: C}
                    - {label: Cyan (c), value: c}
                paramfile: boxshade.params
            -   _type: InputProgramParameter
                prompt: Background for similar residues
                name: similar_background
                argpos: '24'
                format: {perl: '"$value\\n"', python: str(value) + "\n"}
                precond:
                    '#and':
                    - label_similar
                    -   output_format: {'#ne': b}
                mandatory: true
                type:
                    _type: StringType
                    default: '1'
                    options:
                    - {label: Black (B), value: B}
                    - {label: White (W), value: W}
                    - {label: 'Gray value: 1', value: '1'}
                    - {label: 'Gray value: 2', value: '2'}
                    - {label: 'Gray value: 3', value: '3'}
                    - {label: 'Gray value: 4 (darkest)', value: '4'}
                    - {label: Red (R), value: R}
                    - {label: Green (G), value: G}
                    - {label: Blue (L), value: L}
                    - {label: Yellow (Y), value: Y}
                    - {label: Magenta (M), value: M}
                    - {label: Cyan (C), value: C}
                paramfile: boxshade.params
            -   _type: InputProgramParameter
                prompt: Foreground for similar residues (lowercase choices mean lowercase
                    letters in the sequence)
                name: similar_foreground
                argpos: '25'
                format: {perl: '"$value\\n"', python: str(value) + "\n"}
                precond: label_similar
                mandatory: true
                type:
                    _type: StringType
                    default: B
                    options:
                    - {label: Black (B), value: B}
                    - {label: Black (b), value: b}
                    - {label: White (W), value: W}
                    - {label: White (w), value: w}
                    - {label: 'Gray value: 1', value: '1'}
                    - {label: 'Gray value: 2', value: '2'}
                    - {label: 'Gray value: 3', value: '3'}
                    - {label: 'Gray value: 4 = darkest', value: '4'}
                    - {label: 'Gray value: 5 (lowercase)', value: '5'}
                    - {label: 'Gray value: 6 (lowercase)', value: '6'}
                    - {label: 'Gray value: 7 (lowercase)', value: '7'}
                    - {label: 'Gray value: 8 = darkest (lowercase)', value: '8'}
                    - {label: Red (R), value: R}
                    - {label: Red (r), value: r}
                    - {label: Green (G), value: G}
                    - {label: Green (g), value: g}
                    - {label: Blue (L), value: L}
                    - {label: Blue (l), value: l}
                    - {label: Yellow (Y), value: Y}
                    - {label: Yellow (y), value: y}
                    - {label: Magenta (M), value: M}
                    - {label: Magenta (m), value: m}
                    - {label: Cyan (C), value: C}
                    - {label: Cyan (c), value: c}
                paramfile: boxshade.params
            -   _type: InputProgramParameter
                prompt: Background for conserved residues (if special label for identical
                    residues)
                name: conserved_background
                argpos: '26'
                format: {perl: '"$value\\n"', python: str(value) + "\n"}
                precond:
                    '#and':
                    - label_identical
                    -   output_format: {'#ne': b}
                mandatory: true
                type:
                    _type: StringType
                    default: '1'
                    options:
                    - {label: Black (B), value: B}
                    - {label: White (W), value: W}
                    - {label: 'Gray value: 1', value: '1'}
                    - {label: 'Gray value: 2', value: '2'}
                    - {label: 'Gray value: 3', value: '3'}
                    - {label: 'Gray value: 4 (darkest)', value: '4'}
                    - {label: Red (R), value: R}
                    - {label: Green (G), value: G}
                    - {label: Blue (L), value: L}
                    - {label: Yellow (Y), value: Y}
                    - {label: Magenta (M), value: M}
                    - {label: Cyan (C), value: C}
                paramfile: boxshade.params
            -   _type: InputProgramParameter
                prompt: Foreground for conserved residues (lowercase choices mean
                    lowercase letters in the sequence)
                name: conserved_foreground
                argpos: '27'
                format: {perl: '"$value\\n"', python: str(value) + "\n"}
                precond: label_identical
                mandatory: true
                type:
                    _type: StringType
                    default: B
                    options:
                    - {label: Black (B), value: B}
                    - {label: Black (b), value: b}
                    - {label: White (W), value: W}
                    - {label: White (w), value: w}
                    - {label: 'Gray value: 1', value: '1'}
                    - {label: 'Gray value: 2', value: '2'}
                    - {label: 'Gray value: 3', value: '3'}
                    - {label: 'Gray value: 4 = darkest', value: '4'}
                    - {label: 'Gray value: 5 (lowercase)', value: '5'}
                    - {label: 'Gray value: 6 (lowercase)', value: '6'}
                    - {label: 'Gray value: 7 (lowercase)', value: '7'}
                    - {label: 'Gray value: 8 = darkest (lowercase)', value: '8'}
                    - {label: Red (R), value: R}
                    - {label: Red (r), value: r}
                    - {label: Green (G), value: G}
                    - {label: Green (g), value: g}
                    - {label: Blue (L), value: L}
                    - {label: Blue (l), value: l}
                    - {label: Yellow (Y), value: Y}
                    - {label: Yellow (y), value: y}
                    - {label: Magenta (M), value: M}
                    - {label: Magenta (m), value: m}
                    - {label: Cyan (C), value: C}
                    - {label: Cyan (c), value: c}
                paramfile: boxshade.params
        -   _type: InputParagraph
            prompt: Comparison to a single sequence
            name: single_comparison
            children:
            -   _type: InputProgramParameter
                prompt: Similarity to a single sequence
                name: single
                argpos: '4'
                format: {perl: '($value) ? "y\\n" : "n\\n"', python: '( "n\n" , "y\n"
                        )[ value ]'}
                precond:
                    output_format: {'#ne': b}
                type: {_type: BooleanType, default: false}
                paramfile: boxshade.params
            -   _type: InputProgramParameter
                prompt: Which sequence (give its number)
                name: seq_no
                argpos: '40'
                format: {perl: '"$value\\n"', python: str(value) + "\n"}
                precond: single
                mandatory: true
                type: {_type: IntegerType, default: 1}
                paramfile: boxshade.params
            -   _type: InputProgramParameter
                prompt: Hide this sequence
                name: hide
                argpos: '41'
                format: {perl: '($value) ? "y\\n" : "n\\n"', python: '( "n\n" , "y\n"
                        )[ value ]'}
                precond: single
                type: {_type: BooleanType, default: false}
                paramfile: boxshade.params
            -   _type: InputProgramParameter
                prompt: Show this sequence in all-normal rendition
                name: show_normal
                argpos: '42'
                format: {perl: '($value) ? "y\\n" : "n\\n"', python: '( "n\n" , "y\n"
                        )[ value ]'}
                precond: single
                type: {_type: BooleanType, default: false}
                paramfile: boxshade.params
        -   _type: InputProgramParameter
            prompt: Create identity / similarity matrix
            name: matrix
            argpos: '34'
            format: {perl: '($value) ? "y\\n" : "n\\n"', python: '( "n\n" , "y\n"
                    )[ value ]'}
            type: {_type: BooleanType, default: false}
            paramfile: boxshade.params
    -   _type: InputProgramParameter
        name: outfileName
        argpos: '32'
        format: {perl: '"boxshade.result\\n"', python: '"boxshade.result\n"'}
        precond:
            '#and':
            -   output_format: {'#ne': '1'}
            -   output_format: {'#ne': e}
            -   output_format: {'#ne': '2'}
            -   output_format: {'#ne': d}
            -   output_format: {'#ne': c}
            -   output_format: {'#ne': '4'}
        hidden: true
        type: {_type: StringType}
        paramfile: boxshade.params
    -   _type: InputProgramParameter
        name: psFileName
        argpos: '33'
        format: {perl: '"boxshade.ps\\n"', python: '"boxshade.ps\n"'}
        precond:
            '#or':
            - {output_format: '1'}
            - {output_format: '2'}
        hidden: true
        type: {_type: StringType}
        paramfile: boxshade.params
    -   _type: InputProgramParameter
        name: htmlFileName
        argpos: '33'
        format: {perl: '"boxshade.html\\n"', python: '"boxshade.html\n"'}
        precond: {output_format: e}
        hidden: true
        type: {_type: StringType}
        paramfile: boxshade.params
    -   _type: InputProgramParameter
        name: rtfFileName
        argpos: '33'
        format: {perl: '"boxshade.rtf\\n"', python: '"boxshade.rtf\n"'}
        precond: {output_format: '4'}
        hidden: true
        type: {_type: StringType}
        paramfile: boxshade.params
    -   _type: InputProgramParameter
        name: figFileName
        argpos: '33'
        format: {perl: '"boxshade.fig\\n"', python: '"boxshade.fig\n"'}
        precond: {output_format: c}
        hidden: true
        type: {_type: StringType}
        paramfile: boxshade.params
    -   _type: InputProgramParameter
        name: pictFileName
        argpos: '33'
        format: {perl: '"boxshade.pict\\n"', python: '"boxshade.pict\n"'}
        precond: {output_format: d}
        hidden: true
        type: {_type: StringType}
        paramfile: boxshade.params
    -   _type: InputProgramParameter
        name: matrixFileName
        argpos: '35'
        format: {perl: '"boxshade.matrix\\n"', python: '"boxshade.matrix\n"'}
        precond: matrix
        hidden: true
        type: {_type: StringType}
        paramfile: boxshade.params
outputs:
    _type: OutputParagraph
    children:
    -   _type: OutputProgramParameter
        prompt: Output file
        name: outFile
        filenames: {perl: '"boxshade.result"', python: '"boxshade.result"'}
        precond:
            '#and':
            -   output_format: {'#ne': '1'}
            -   output_format: {'#ne': e}
            -   output_format: {'#ne': '2'}
            -   output_format: {'#ne': d}
            -   output_format: {'#ne': c}
            -   output_format: {'#ne': '4'}
    -   _type: OutputProgramParameter
        prompt: Postscript output file
        name: psFile
        filenames: {perl: '"boxshade.ps"', python: '"boxshade.ps"'}
        precond:
            '#or':
            - {output_format: '1'}
            - {output_format: '2'}
    -   _type: OutputProgramParameter
        prompt: Html output file
        name: htmlFile
        filenames: {perl: '"boxshade.html"', python: '"boxshade.html"'}
        precond: {output_format: e}
    -   _type: OutputProgramParameter
        prompt: Rich text format output file
        name: rtfFile
        filenames: {perl: '"boxshade.rtf"', python: '"boxshade.rtf"'}
        precond: {output_format: '4'}
    -   _type: OutputProgramParameter
        prompt: Xfig output file
        name: figFile
        filenames: {perl: '"boxshade.fig"', python: '"boxshade.fig"'}
        precond: {output_format: c}
    -   _type: OutputProgramParameter
        prompt: Picture in pict format
        name: pictFile
        filenames: {perl: '"boxshade.pict"', python: '"boxshade.pict"'}
        precond: {output_format: d}
    -   _type: OutputProgramParameter
        prompt: Output matrix
        name: matrixFile
        filenames: {perl: '"boxshade.matrix"', python: '"boxshade.matrix"'}
        precond: matrix
operations: ['EDAM_operation:0565']
topics: ['EDAM_topic:0092']
homepage_links: ['http://www.ch.embnet.org/software/BOX_form.html']
public_name: boxshade
command: {path: null, value: null}
source_links: ['ftp://www.isrec.isb-sib.ch/pub/software/unix/boxshade/']
