_type: Program
name: tipdate
version: '1.2'
title: TipDate
description: Analysis of trees with dated tips
authors: Andrew Rambaut
inputs:
    _type: InputParagraph
    children:
    -   _type: InputProgramParameter
        comment: TipDate  requires a  sequence alignment together with a description
            of the quartets and dates to be used. The idea is that the user may supply
            an alignment of a large number of species and then define multiple quartets
            to be constructed from them.Note that the sequences names have a date
            at the end (in this case in years). TipDate looks for any number at the
            end of the names and assumes these are dates. They can be decimal (i.e.
            98.2) is 98 and 1/5 (if you want months specify the whole date in months).
            The units are arbitrary because the rates and dates estimated by the program
            will be specified in the same units the program doesn't need to know what
            they are.
        prompt: Alignment file
        name: alignment
        simple: true
        argpos: '10'
        format: {perl: '" <$value"', python: '" <" + str(value)'}
        mandatory: true
    -   _type: InputParagraph
        prompt: Control options
        name: control_options
        children:
        -   _type: InputProgramParameter
            comment: Model This option sets the model of nucleotide substitution with
                a choice of either F84, HKY (also known as HKY85) or REV (markov general
                reversable model). The first two models are quite similar but not
                identical.  They both require a transition transversion ratio and
                relative base frequencies as parameters.  Other models such as K2P,
                F81 and JC69 are special cases of HKY and can be obtained by setting
                the nucleotide frequencies equal (for K2P) or the transition transversion
                ratio to 1.0 (for F81) or both (for JC69).
            prompt: MODEL (-m)
            name: model
            format: {perl: '(defined $value and $value ne $vdef)? " -m$value" : ""',
                python: '( "" , " -m" + str(value))[ value is not None and value !=
                    vdef]'}
            type:
                _type: StringType
                default: F84
                options:
                - {label: F84, value: F84}
                - {label: HKY, value: HKY}
                - {label: REV (markov general reversable model), value: REV}
        -   _type: InputProgramParameter
            comment: This option specifies the Molecular Clock model (Single Rate,
                SR model). This model is the equivalent of the DNAMLK program in PHYLIP
                or specifying the molecular clock option in PAUP*. The default (i.e.,
                not specifying k) gives the Non-Clock model (Different Rate, DR model).
            prompt: Molecular clock model (-k)
            name: constant_rate
            format: {perl: '($value) ? " -k" : ""', python: '( "" , " -k" )[ value
                    ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            comment: 'This option specifies the Variable Rate Dated Tip

                (VRDT) model. This model assumes that the rate of substitution changes
                linearly

                as we go back through time. The rate of change of rate is given as
                a proportion

                of the rate of substitution at the present. This rate can be positive
                or negative but not all data sets will have the power to estimate
                this parameter.Using this option will estimate the rate of evolution
                as a maximum likelihood parameter. You can also constrain the estimation
                of this parameter to be only positive or only negative'
            prompt: Variable Rate Tip Date Model (+w)
            name: change_rate_estim
            format: {perl: '($value ne $vdef and $value ne "-w") ? " $value" : ""',
                python: '( "" , " " + str(value) )[ value !=vdef and value != "-w"]'}
            type:
                _type: StringType
                default: 'null'
                options:
                - {label: 'off', value: 'null'}
                - {label: Maximum likelihood parameter (+w), value: +w}
                - {label: 'Maximum likelihood parameter: only positive (+w+)', value: +w+}
                - {label: 'Maximum likelihood parameter: only negative (+w-)', value: +w-}
                - {label: User value for variable Rate (-w), value: -w}
        -   _type: InputProgramParameter
            comment: Where value is an real number that gives the rate of change of
                rate as proportion of rate at present per unit time.
            prompt: Variable Rate Tip Date Model with user value (-w)
            name: user_rate_value
            format: {perl: '" -w $value"', python: '" -w " + str(value)'}
            precond: {change_rate_estim: -w}
            mandatory: true
            type: {_type: FloatType}
        -   _type: InputProgramParameter
            comment: Estimate confidence intervals for the rate of change of rate
                parameter in the Variable Rate Dated Tip model (requires +w option).
            prompt: Estimate confidence intervals ( require +w option) (-iw)
            name: change_confidence
            format: {perl: '($value)? " -iw" : ""', python: '( "" , " -iw" )[ value
                    ]'}
            precond: change_confidence
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            comment: This option specifies the Single Rate Date Tips (SRDT) model.
                The default value is the Non-Clock model. The input tree and sequences
                must have names that end with dates. Using this option will estimate
                the rate of evolution as a maximum likelihood parameter.
            prompt: Tip Date Model with estimation of the rate of evolution (+s)
            name: tip_date
            format: {perl: '($value) ? " +s" : ""', python: '( "" , " +s" )[ value  ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            comment: This option specifies which parameters should have confidence
                intervals estimated. The default is not to estimate confidence intervals.
                These options can be used in combination.
            prompt: Estimate confidence intervals for the absolute rate of substitution
                (-is)
            name: substitution_confidence
            format: {perl: '($value)? " -is" : ""', python: '( "" , " -is" )[ value
                    ]'}
            precond: tip_date
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Estimate confidence intervals for date of root of tree (-id)
            name: date_confidence
            format: {perl: '($value)? " -id" : ""', python: '( "" , " -id" )[ value
                    ]'}
            precond: tip_date
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            comment: This option specifies the value to use to obtain the confidence
                intervals around the estimate of rate of molecular evolution (and
                corresponding date of root of the tree).Where value is a real number
                >= 0 that specifies the log likelihood ratio that gives the confidence
                interval. The default is 1.92 which corresponds to half c2 with 1
                degree of freedom. A value of 0 will disable the calculation of confidence
                intervals.
            prompt: Limit to use estimating confidence intervals (-l)
            name: limit
            format: {perl: '(defined $value and $value != $vdef)? " -l $value" : ""',
                python: '( "" , " -l " + str(value) )[ value is not None and value
                    != vdef]'}
            type: {_type: FloatType, default: 1.92}
        -   _type: InputProgramParameter
            comment: Where the value is an real number that gives the rate of molecular
                evolution in substitutions per site per unit time (whatever the units
                of time that are represented by the input tip dates).Variable Rate
                Tip Date Model This option specifies the Variable Rate Dated Tip (VRDT)
                model. This model assumes that the rate of substitution changes linearly
                as we go back through time. The rate of change of rate is given as
                a proportion of the rate of substitution at the present. This rate
                can be positive or negative but not all data sets will have the power
                to estimate this parameter. This model must be used in conjunction
                with the +s or -s options, above.
            prompt: 'Tip date Model without estimation of the rate of evolution: user
                value (-s)'
            name: tip_date_specified
            format: {perl: '(defined $value) ? " -s $value" : ""', python: '( "" ,
                    " -s " + str(value) )[ value is not None]'}
            precond: {'#not': tip_date}
            type: {_type: FloatType}
        -   _type: InputProgramParameter
            comment: Alternatively TipDate can find the maximum likelihood position
                of the root. This tries all possible positions (2n-3) so increases
                the duration of analysis.
            prompt: Estimate root tree (+r)
            name: root_value_estimate
            format: {perl: '($value) ? " +r" : ""', python: '( "" , " +r" )[ value  ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            comment: 'The input tree must be rooted. This option is used to specify
                an outgroup sequence to root the tree with (sorry this is not very
                sophisticated: if you need to use more than one outgroup, root the
                tree before hand).Where value is an integer number which refers to
                the sequence that will be used to root the tree (starting at 1).'
            prompt: Specify rooting of tree To perform the molecular clock and tip
                date models (-r)
            name: root_value
            format: {perl: '(defined $value and $value!=$vdef) ? " -r $value" : ""',
                python: '( "" , " -r " + str(value) )[ value is not None and value
                    !=vdef]'}
            precond: {'#not': root_value_estimate}
            type: {_type: IntegerType, default: 1}
        -   _type: InputProgramParameter
            prompt: 'CODON CATEGORIES = 112, 123, 120, etc. [default: homogeneity]
                (-p)'
            name: codon_categories
            format: {perl: '(defined $value)? " -p $value" : ""', python: '( "" ,
                    " -p " + str(value) )[ value is not None ]'}
            type: {_type: StringType}
        -   _type: InputProgramParameter
            comment: Using this option the user may specify the relative rates for
                each codon position. This allows codon-specific rate heterogeneity
                to be modelled. The default is no site-specific rate heterogeneity.
            prompt: 'CODON-specific Rate Heterogeneity: #1 #2 #3 separated by commas
                (-c)'
            name: codon_rate
            format: {perl: '(defined $value)? " -c$value" : ""', python: '( "" , "
                    -c" + str(value) )[ value is not None ]'}
            type: {_type: StringType}
        -   _type: InputProgramParameter
            prompt: Estimate seperate models for each site category (-e)
            name: seperate
            format: {perl: '($value)? " -e" : ""', python: '( "" , " -e" )[ value
                    ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            comment: "Using this option the user may specify the\n\t      number of\
                \ categories for the discrete gamma rate heterogeneity model. Enter\
                \ an integer between 2 and 32 that specifies the number of categories\
                \ to use with the discrete gamma rate heterogeneity model."
            prompt: Discrete Gamma Rate Heterogeneity (2 to 32) (-g)
            name: gamma
            format: {perl: '(defined $value)? " -g $value" : ""', python: '( "" ,
                    " -g " + str(value) )[ value is not None ]'}
            type: {_type: IntegerType}
        -   _type: InputProgramParameter
            comment: 'Using this option the user may specify a shape for the gamma
                rate heterogeneity called alpha. The default is no site-specific rate

                heterogeneity. Where value is a real number >0 that specifies the
                shape of the gamma distribution to use with gamma rate heterogeneity.'
            prompt: Gamma Rate Heterogeneity (-a)
            name: alpha
            format: {perl: '(defined $value)? " -a $value" : ""', python: '( "" ,
                    " -a " + str(value) )[value is not None]'}
            precond:
                gamma: {'#ne': None}
            type: {_type: FloatType}
        -   _type: InputProgramParameter
            prompt: Number of Datasets (-n)
            name: datasets
            format: {perl: '(defined $value and $value != $vdef)? " -n $value" : ""',
                python: '( "" , " -n " + str(value) )[ value is not None and value
                    != vdef]'}
            type: {_type: IntegerType, default: 1}
        -   _type: InputProgramParameter
            prompt: User branch-lengths [default = estimate] (-ul)
            name: user_branch
            format: {perl: '($value) ? " -ul" : ""', python: '("", " -ul" ) [value]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Equal frequencies of nucleotide (-f=)
            name: equal_freq
            format: {perl: '($value)? " -f=" : ""', python: '( "" , " -f=" )[ value
                    ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            comment: "This option is used to specify the relative\n\t      frequencies\
                \ of the four nucleotides. By default, TipDate will estimate them\
                \ empirically from the data.  If the given values don't sum to 1.0\
                \ then they will be scaled so that they do.Value is four decimal numbers\
                \ for the frequencies of A, C, G and T respectively, separated by\
                \ commas."
            prompt: 'Relative nucleotide frequencies: #A #C #G #T separated by commas
                (-f)'
            name: freq_bases
            format: {perl: '(defined $value)? " -f$value" : ""', python: '( "" , "
                    -f" + str(value) )[ value is not None]'}
            precond: {'#not': equal_freq}
            type: {_type: StringType}
        -   _type: InputProgramParameter
            comment: This option allows the user to set a value for the transition
                transversion ratio (TS/TV). This is only valid when either the HKY
                or F84 model has been selected. Value is a decimal number greater
                than zero.
            prompt: Transition/transversion ratio for F84/HKY model (-t)
            name: transition_transversion
            format: {perl: '(defined $value and $value != $vdef)? " -t$value" : ""',
                python: '( "" , " -t" + str(value) )[ value is not None and value
                    != vdef]'}
            precond:
                '#or':
                - {model: F84}
                - {model: HKY}
            type: {_type: FloatType, default: 2.0}
        -   _type: InputProgramParameter
            comment: Where value are size decimal numbers for the instantaneous rates
                of change from A to C, A to G, A to T, C to G, C to T and G to T respectively,
                separated by commas. The matrix is symmetrical so the reverse changes
                occur at the same instantaneous rate as forward changes (e.g. C to
                A equals A to C) and therefore only six values need be set. These
                values will be scaled such that the last value (G to T) is 1.0 and
                the others are set relative to this.
            prompt: 'Rate matrix values for REV model: 6 values separated by commas
                (-t)'
            name: rate_matrix
            format: {perl: '(defined $value)? " -t$value" : ""', python: '( "" , "
                    -t" + str(value) )[ value is not None]'}
            precond: {model: REV}
            type: {_type: StringType}
    -   _type: InputParagraph
        prompt: Output options
        name: output_options
        children:
        -   _type: InputProgramParameter
            prompt: Print final branch lengths (-vb)
            name: branch
            format: {perl: '($value)? " -vb" : ""', python: '( "" , " -vb" )[ value
                    ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Write likelihoods for each Site (-vs)
            name: likelihoods
            format: {perl: '($value)? " -vs" : ""', python: '( "" , " -vs" )[ value
                    ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Don't Write trees (-vw)
            name: notrees
            format: {perl: '($value)? " -vw" : ""', python: '( "" , " -vw" )[ value
                    ]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Show indication of progress (-vp)
            name: progress
            format: {perl: '($value)? " -vp":""', python: '( "" , " -vp" )[ value
                    ]'}
            type: {_type: BooleanType, default: false}
outputs:
    _type: OutputParagraph
    children:
    -   _type: OutputProgramParameter
        prompt: Tree file
        name: outtree
        filenames: {perl: '"tipdate.out"', python: '"tipdate.out"'}
        output_type: stdout
        type:
            _type: FormattedType
            format_terms: ['EDAM_format:1910']
            data_terms: EDAM_data:0872
operations: ['EDAM_operation:0557']
topics: ['EDAM_topic:0084']
references:
- {doi: null, label: 'Andrew Rambaut, 2000. Estimating the rate of molecular evolution:
        Incorporating non-contemporaneous sequences into maximum likelihood phylogenies.
        Bioinformatics.', url: null}
documentation_links: ['http://bioweb2.pasteur.fr/docs/tipdate/TipDate.v1.2.Manual.pdf']
public_name: tipdate
command: {path: null, value: tipdate}
