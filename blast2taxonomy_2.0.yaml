_type: Program
name: blast2taxonomy
version: '2.0'
title: blast2taxonomy
description: Blast Taxonomy report
authors: C. Maufrais
inputs:
    _type: InputParagraph
    children:
    -   _type: InputProgramParameter
        prompt: Blast output file
        name: infile
        simple: true
        argpos: '10'
        format: {perl: '" $value"', python: '" " + str(value)'}
        mandatory: true
        type: {_type: FormattedType, data_terms: 'EDAM_data:0857'}
    -   _type: InputParagraph
        prompt: Display options
        name: display
        children:
        -   _type: InputProgramParameter
            comment: All hit are display in tree by default.
            prompt: Report one branch per organism (-s)
            name: single
            format: {perl: '($value) ? " -s" : ""', python: '("" , " -s") [value]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Report accession number (-a)
            name: acc
            format: {perl: '($value) ? " -a" : ""', python: '("" , " -a") [value]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Lowest common ancestor name (-n).
            name: node_name
            format: {perl: '($value) ? " -n $value" : ""', python: '("" , " -n " +
                    str(value)) [value is not None]'}
            type: {_type: StringType}
        -   _type: InputProgramParameter
            prompt: Select hit blast with e-value lower than value (-E).
            name: filterevalue
            format: {perl: '($value) ? " - $value" : ""', python: '("" , " -E " +
                    str(value)) [value and value != vdef]'}
            type: {_type: FloatType, default: 10.0}
        -   _type: InputProgramParameter
            prompt: Report score and e-value Blast hit (-e).
            name: evalue
            format: {perl: '($value) ? " -e" : ""', python: '("" , " -e") [value]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Report ratio of Blast hit length per query length (-l).
            name: perlen
            format: {perl: '($value) ? " -l" : ""', python: '("" , " -l") [value]'}
            type: {_type: BooleanType, default: false}
    -   _type: InputParagraph
        prompt: Output option
        name: output
        children:
        -   _type: InputProgramParameter
            prompt: Tabular output (-x)
            name: xlsoutput
            format: {perl: '($value)? " -x" : ""', python: '("" , " -x") [value]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Html output (-w)
            name: htmloutput
            format: {perl: '($value)? " -w" : ""', python: '("" , " -w") [value]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Taxonomy report in Newick format (-t)
            name: dndoutput
            format: {perl: '($value)? " -t" : ""', python: '("" , " -t") [value]'}
            type: {_type: BooleanType, default: false}
        -   _type: InputProgramParameter
            prompt: Output file name (-o)
            name: outputfile
            format: {perl: '(defined $value)? " -o $value" : ""', python: '(""  ,
                    " -o  " + str(value))  [value is not None ]'}
            type: {_type: StringType}
outputs:
    _type: OutputParagraph
    children:
    -   _type: OutputParagraph
        prompt: Output option
        name: output
        children:
        -   _type: OutputProgramParameter
            prompt: Output file
            name: outfile_name
            filenames: {perl: $outputfile, python: str(outputfile)}
            precond:
                '#and':
                - {'#not': htmloutput}
                - outputfile
        -   _type: OutputProgramParameter
            prompt: Output file
            name: outfile
            filenames: {perl: '"blast2taxonomy.out"', python: '"blast2taxonomy.out"'}
            precond:
                '#not':
                    '#and': [htmloutput, outputfile]
            output_type: stdout
        -   _type: OutputProgramParameter
            prompt: Html output file
            name: htmloutfile
            filenames: {perl: '(defined $outputfile)? "$outputfile.html": "blast2taxonomy.html"',
                python: '("blast2taxonomy.html", str(outputfile)+".html")[outputfile
                    is not None]'}
            precond: htmloutput
        -   _type: OutputProgramParameter
            prompt: Alignment Html output file
            name: htmloutfilealn
            filenames: {perl: '"alignment.html"', python: '"alignment.html"'}
            precond: htmloutput
        -   _type: OutputProgramParameter
            prompt: Newick tree file
            name: dndoutfile
            filenames: {perl: '(defined $outputfile)? "$outputfile.dnd": "blast2taxonomy.dnd"',
                python: '("blast2taxonomy.dnd", str(outputfile)+".dnd")[outputfile
                    is not None]'}
            precond: dndoutput
            type:
                _type: FormattedType
                format_terms: ['EDAM_format:1910']
                data_terms: EDAM_data:0872
operations: ['EDAM_operation:0258', 'EDAM_operation:0637']
topics: ['EDAM_topic:0182', 'EDAM_topic:0637']
public_name: blast2taxonomy
command: {path: null, value: blast2taxonomy}
